{
  "resource_uri": "https://www.courtlistener.com/api/rest/v3/opinions/195952/",
  "id": 195952,
  "absolute_url": "/opinion/195952/lotus-v-borland/",
  "cluster": "https://www.courtlistener.com/api/rest/v3/clusters/195952/",
  "author": null,
  "joined_by": [],
  "author_str": "",
  "per_curiam": false,
  "joined_by_str": "",
  "date_created": "2011-02-07T02:53:00Z",
  "date_modified": "2020-02-21T22:38:12.950163Z",
  "type": "010combined",
  "sha1": "786df691eae45a727ea69aab473d2bd9ea8c8d7b",
  "page_count": null,
  "download_url": "http://www.ca1.uscourts.gov/cgi-bin/getopn.pl?OPINION=93-2214.01A",
  "local_path": null,
  "plain_text": "\n\nApril 19, 1995\n                United States Court of Appeals\r                            United States Court of Appeals\n                    For the First Circuit\r                                For the First Circuit\n                                         \n\nNo. 93-2214\n\n                LOTUS DEVELOPMENT CORPORATION,\n\n                     Plaintiff, Appellee,\n\n                              v.\n\n                 BORLAND INTERNATIONAL, INC.,\n\n                    Defendant, Appellant.\n\n                                         \n\n                         ERRATA SHEET\r                                     ERRATA SHEET\n\nThe opinion of this  court issued on March  9, 1995, is amended as\n\nfollows:\n\nOn page 38,  line 16:   Change \"See  id. at 562.\"  to \"See id.  at\r                                                                          \n\n562.  But  see Campbell v.  Acuff-Rose Music, Inc.,  114 S. Ct.  1164,\r                                                          \n\n1174 (1994).\"\r\r\n\n                United States Court of Appeals\r                            United States Court of Appeals\n\n                    For the First Circuit\r                                For the First Circuit\n\n                                         \n\nNo. 93-2214\n\n                LOTUS DEVELOPMENT CORPORATION,\n\n                     Plaintiff, Appellee,\n\n                              v.\n\n                 BORLAND INTERNATIONAL, INC.,\n\n                    Defendant, Appellant.\n\n                                         \n\n         APPEAL FROM THE UNITED STATES DISTRICT COURT\n\n              FOR THE DISTRICT OF MASSACHUSETTS\n\n         [Hon. Robert E. Keeton, U.S. District Judge]\r                                                                \n\n                                         \r\r\n\n                            Before\n\n                    Torruella, Chief Judge,\r                                                      \n\n              Boudin and Stahl, Circuit Judges.\r                                                          \n\n                                         \n\nGary  L.  Reback,  with whom  Peter  N.  Detkin, Michael  Barclay,\r                                                                             \n\nIsabella  E. Fu, Wilson Sonsini  Goodrich &amp; Rosati,  Peter E. Gelhaar,\r                                                                             \n\nKatherine  L. Parks, and Donnelly Conroy  &amp; Gelhaar, were on brief for\r                                                           \n\nappellant.\n\nMatthew P. Poppel, et. al, were  on brief for Computer Scientists,\r                             \n\namicus curiae.\n\nDennis S. Karjala and Peter S. Menell on brief, amici curiae.\r                                                 \n\nJeffrey  C. Cannon and Baker  Keaton Seibel &amp; Cannon were on brief\r                                                                \n\nfor Computer Software Industry Association, amicus curiae.\n\nLaureen E.  McGurk, David A. Rabin,  Bryan G.  Harrison and Morris\r                                                                              \n\nManning  &amp; Martin were on  brief for Chicago  Computer Society, Diablo\r                         \n\nUsers  Group,  Danbury  Area Computer  Society,  IBM  AB Users  Group,\n\nKentucky-Indiana Personal  Computer Users Group, Long  Island PC Users\n\nGroup, Napa Valley PC  Users Group, Pacific Northwest PC  Users Group,\n\nPalmetto Personal Computer  Club, Philadelphia Area  Computer Society,\n\nInc., Phoenix  IBM PC Users Group,  Pinellas IBM PC Users  Group, Quad\n\nCities Computer Society, Quattro Pro Users Group, Sacramento  PC Users\n\nGroup, San Francisco  PC Users  Group, Santa Barbara  PC Users  Group,\n\nTwin Cities  PC  Users Group,  and  Warner Robbins  Personal  Computer\r\r\n\nAssociation, amici curiae.\n\nDiane  Marie O'Malley  and Hanson  Bridgett  Marcus Vlahos  &amp; Rudy\r                                                                              \n\nwere on brief for Software Entrepreneurs' Forum, amicus curiae.\n\nPeter  M.C.  Choy  was   on  brief  for   American  Committee  for\r                             \n\nInteroperable Systems, amicus curiae.\n\nHoward B. Abrams, Howard C. Anawalt,  Stephen R. Barnett, Ralph S.\r                                                                              \n\nBrown, Stephen L. Carter, Amy B. Cohen, Paul J. Heald, Peter A. Jaszi,\r                                                                             \n\nJohn  A. Kidwell, Edmund W.  Kitch, Roberta R.  Kwall, David L. Lange,\r                                                                             \n\nMarshall  Leaffer,  Jessica  D. Litman,  Charles  R.  McManis,  L. Ray\r                                                                              \n\nPatterson, Jerome H. Reichman, David A.  Rice, Pamela Samuelson, David\r                                                                              \n\nJ. Seipp,  David E. Shipley, Lionel S. Sobel, Alfred C. Yen, and Diane\r                                                                              \n\nL.  Zimmerman  were on  brief  for  Copyright Law  Professors,  amicus\r                     \n\ncuriae.\n\nHenry  B. Gutman, with  whom Kerry  L. Konrad,  Joshua H. Epstein,\r                                                                             \n\nKimberly A. Caldwell, O'Sullivan Graev &amp; Karabell, Thomas  M. Lemberg,\r                                                                             \n\nJames C. Burling, and Hale and Dorr, were on brief for appellee.\r                                           \n\nMorton David  Goldberg, June M. Besek,  David O.  Carson, Jesse M.\r                                                                              \n\nFeder,  Schwab Goldberg Price  &amp; Dannay, and Arthur  R. Miller were on\r                                                                      \n\nbrief  for  Apple  Computer,  Inc.,   Digital  Equipment  Corporation,\n\nInternational  Business Machines  Corporation, and  Xerox Corporation,\n\namici curiae.\n\nJon A. Baumgarten, Proskauer  Rose Goetz &amp;  Mendelsohn, and Robert\r                                                                              \n\nA. Gorman were on brief for Adobe Systems, Inc., Apple Computer, Inc.,\r                 \n\nComputer   Associates   International,    Inc.,   Digital    Equipment\n\nCorporation,  and International  Business Machines  Corporation, amici\n\ncuriae.\r\r\n\nHerbert  F. Schwartz, Vincent  N. Palladino, Susan Progoff, Fish &amp;\r                                                                              \n\nNeave, William J. Cheeseman, and Foley Hoag &amp; Eliot, were on brief for\r                                                           \n\nComputer  and  Business  Equipment Manufacturers  Association,  amicus\n\ncuriae.\n\n                                         \n\n                        March 9, 1995\n\n                                         \r\r\n\n          STAHL, Circuit  Judge.  This appeal  requires us to\r                      STAHL, Circuit  Judge.\r                                           \n\ndecide   whether  a  computer   menu  command   hierarchy  is\n\ncopyrightable subject matter.   In particular, we must decide\n\nwhether, as the district court held, plaintiff-appellee Lotus\n\nDevelopment   Corporation's  copyright  in   Lotus  1-2-3,  a\n\ncomputer  spreadsheet program,  was  infringed by  defendant-\n\nappellant  Borland International,  Inc., when  Borland copied\n\nthe Lotus 1-2-3 menu command  hierarchy into its Quattro  and\n\nQuattro Pro  computer spreadsheet  programs.  See  Lotus Dev.\r                                                                         \n\nCorp. v. Borland Int'l, Inc., 788 F. Supp. 78 (D. Mass. 1992)\r                                        \n\n(\"Borland I\"); Lotus  Dev. Corp. v. Borland Int'l,  Inc., 799\r                                                                    \n\nF. Supp. 203 (D. Mass. 1992) (\"Borland II\"); Lotus Dev. Corp.\r                                                                         \n\nv.  Borland Int'l,  Inc., 831  F. Supp.  202 (D.  Mass. 1993)\r                                    \n\n(\"Borland III\"); Lotus Dev. Corp. v. Borland Int'l, Inc., 831\r                                                                    \n\nF. Supp. 223 (D. Mass. 1993) (\"Borland IV\").\r                                                     \n\n                              I.\r                                          I.\r                                            \n\n                          Background\r                                      Background\r                                                \n\n          Lotus 1-2-3 is  a spreadsheet program  that enables\n\nusers  to perform  accounting functions  electronically  on a\n\ncomputer.   Users manipulate  and control the  program via  a\n\nseries of menu commands, such as \"Copy,\" \"Print,\" and \"Quit.\"\n\nUsers  choose commands  either  by highlighting  them on  the\n\nscreen or by typing their first letter.  In  all, Lotus 1-2-3\n\n                             -3-\r                                          3\r\r\n\nhas  469  commands  arranged  into  more than  50  menus  and\n\nsubmenus.\n\n          Lotus  1-2-3, like  many computer  programs, allows\n\nusers to write what are called \"macros.\"  By writing a macro,\n\na  user  can designate  a series  of  command choices  with a\n\nsingle  macro keystroke.    Then, to  execute that  series of\n\ncommands in  multiple parts  of the spreadsheet,  rather than\n\ntyping the whole  series each  time, the user  only needs  to\n\ntype  the single pre-programmed  macro keystroke, causing the\n\nprogram  to  recall  and  perform the  designated  series  of\n\ncommands automatically.  Thus, Lotus 1-2-3 macros shorten the\n\ntime needed to set up and operate the program.\n\n          Borland released  its first Quattro program  to the\n\npublic in  1987, after  Borland's engineers had  labored over\n\nits development for nearly  three years.  Borland's objective\n\nwas to develop a spreadsheet program far superior to existing\n\nprograms, including Lotus 1-2-3.  In Borland's words, \"[f]rom\n\nthe  time of  its  initial release  .  . .  Quattro  included\n\nenormous innovations over competing spreadsheet products.\"\n\n          The district court found,  and Borland does not now\n\ncontest, that Borland included in its Quattro and Quattro Pro\n\nversion  1.0  programs \"a  virtually  identical  copy of  the\r                                                           \n\nentire 1-2-3  menu tree.\"   Borland III, 831 F.  Supp. at 212\r                                                   \n\n(emphasis  in original).  In  so doing, Borland  did not copy\n\nany  of Lotus's underlying computer  code; it copied only the\n\n                             -4-\r                                          4\r\r\n\nwords  and  structure  of  Lotus's  menu  command  hierarchy.\n\nBorland  included the  Lotus  menu command  hierarchy in  its\n\nprograms to  make them  compatible with  Lotus 1-2-3  so that\n\nspreadsheet users who were  already familiar with Lotus 1-2-3\n\nwould  be able  to  switch to  the  Borland programs  without\n\nhaving to learn new commands or rewrite their Lotus macros.\n\n          In  its   Quattro  and  Quattro  Pro   version  1.0\n\nprograms, Borland achieved compatibility with  Lotus 1-2-3 by\n\noffering its  users an  alternate user interface,  the \"Lotus\n\nEmulation Interface.\"  By activating the Emulation Interface,\n\nBorland  users would  see the  Lotus  menu commands  on their\n\nscreens  and could interact with Quattro or Quattro Pro as if\n\nusing Lotus  1-2-3, albeit with a  slightly different looking\n\nscreen and with  many Borland options not  available on Lotus\n\n1-2-3.  In effect,  Borland allowed users to choose  how they\n\nwanted  to communicate  with Borland's  spreadsheet programs:\n\neither by  using  menu commands  designed by  Borland, or  by\n\nusing the  commands and command structure used in Lotus 1-2-3\n\naugmented by Borland-added commands.\n\n          Lotus  filed this  action  against  Borland in  the\n\nDistrict  of Massachusetts on July 2, 1990, four days after a\n\ndistrict  court held  that the  Lotus 1-2-3  \"menu structure,\n\ntaken as a  whole --  including the choice  of command  terms\n\n[and] the structure and order of those terms,\"  was protected\n\nexpression covered  by Lotus's copyrights.   Lotus Dev. Corp.\r                                                                         \n\n                             -5-\r                                          5\r\r\n\nv.  Paperback Software  Int'l, 740  F. Supp.  37, 68,  70 (D.\r                                         \n\nMass.  1990)  (\"Paperback\").1   Three  days  earlier, on  the\r                                     \n\nmorning  after the  Paperback decision,  Borland had  filed a\r                                         \n\ndeclaratory judgment  action against  Lotus  in the  Northern\n\nDistrict  of   California,  seeking  a  declaration  of  non-\n\ninfringement.   On September 10, 1990,  the district court in\n\nCalifornia dismissed Borland's declaratory judgment action in\n\nfavor of this action.\n\n          Lotus  and Borland filed  cross motions for summary\n\njudgment; the district court denied both motions on March 20,\n\n1992, concluding that \"neither party's motion is supported by\n\nthe record.\"   Borland I, 788  F. Supp. at 80.   The district\r                                    \n\ncourt invited  the parties  to file renewed  summary judgment\n\nmotions that would \"focus  their arguments more precisely\" in\n\nlight of rulings it  had made in conjunction with  its denial\n\nof their summary  judgment motions.  Id. at 82.  Both parties\r                                                    \n\nfiled renewed motions for summary judgment on April 24, 1992.\n\nIn its motion, Borland  contended that the Lotus 1-2-3  menus\n\nwere  not  copyrightable  as a  matter  of  law  and that  no\n\nreasonable  trier  of fact  could  find  that the  similarity\n\nbetween  its  products  and  Lotus 1-2-3  was  sufficient  to\n\nsustain a determination of  infringement.  Lotus contended in\n\n                    \r                                \n\n1.  Judge Keeton presided over both the Paperback  litigation\r                                                             \nand this case.\n\n                             -6-\r                                          6\r\r\n\nits motion that Borland had copied  Lotus 1-2-3's entire user\n\ninterface and had thereby infringed Lotus's copyrights.\n\n          On  July  31,  1992,  the  district  court   denied\n\nBorland's  motion and  granted Lotus's motion  in part.   The\n\ndistrict court  ruled that  the Lotus menu  command hierarchy\n\nwas copyrightable expression because\n\n          [a]  very  satisfactory spreadsheet  menu\n          tree can be  constructed using  different\n          commands   and    a   different   command\n          structure from  those of Lotus 1-2-3.  In\n          fact, Borland has  constructed just  such\n          an  alternate  tree  for  use  in Quattro\n          Pro's native mode.  Even if one holds the\n          arrangement of menu commands constant, it\n          is   possible   to   generate   literally\n          millions  of  satisfactory menu  trees by\n          varying the menu commands employed.  \n\nBorland  II, 799  F.  Supp.  at  217.    The  district  court\r                       \n\ndemonstrated this by offering alternate command words for the\n\nten  commands that  appear in Lotus's  main menu.   Id.   For\r                                                                   \n\nexample, the district court stated that \"[t]he `Quit' command\n\ncould be  named `Exit' without any  other modifications,\" and\n\nthat \"[t]he `Copy' command  could be called `Clone,' `Ditto,'\n\n`Duplicate,'    `Imitate,'    `Mimic,'    `Replicate,'    and\n\n`Reproduce,'  among others.\"  Id.  Because so many variations\r                                             \n\nwere possible,  the district  court concluded that  the Lotus\n\ndevelopers'   choice  and   arrangement  of   command  terms,\n\nreflected  in the Lotus  menu command  hierarchy, constituted\n\ncopyrightable expression.\n\n                             -7-\r                                          7\r\r\n\n          In granting partial summary judgment  to Lotus, the\n\ndistrict  court  held  that  Borland  had  infringed  Lotus's\n\ncopyright in Lotus 1-2-3:\n\n          [A]s a matter  of law, Borland's  Quattro\n          products   infringe   the   Lotus   1-2-3\n          copyright  because of  (1) the  extent of\n          copying  of the \"menu commands\" and \"menu\n          structure\" that is not genuinely disputed\r                                                      \n          in this case, (2) the extent to which the\n          copied  elements  of the  \"menu commands\"\n          and  \"menu structure\"  contain expressive\n          aspects separable from  the functions  of\n          the \"menu commands\" and \"menu structure,\"\n          and  (3)   the  scope  of   those  copied\n          expressive aspects as an integral part of\n          Lotus 1-2-3.\n\nBorland II, 799 F. Supp. at  223 (emphasis in original).  The\r                      \n\ncourt  nevertheless concluded  that  while  the  Quattro  and\n\nQuattro Pro programs infringed Lotus's copyright, Borland had\n\nnot copied  the entire Lotus  1-2-3 user interface,  as Lotus\n\nhad contended.  Accordingly, the court concluded that  a jury\n\ntrial  was  necessary to  determine  the  scope of  Borland's\n\ninfringement,  including  whether  Borland  copied  the  long\n\nprompts2 of  Lotus 1-2-3, whether the  long prompts contained\n\n                    \r                                \n\n2.  Lotus 1-2-3 utilizes a two-line menu;  the top line lists\nthe commands from which  the user may choose, and  the bottom\nline  displays what Lotus calls its \"long prompts.\"  The long\nprompts  explain,  as   a  sort  of  \"help  text,\"  what  the\nhighlighted menu  command will do  if entered.   For example,\nthe  long prompt  for  the \"Worksheet\"  command displays  the\nsubmenu  that  the \"Worksheet\"  command  calls  up; it  reads\n\"Global,  Insert,  Delete,  Column,  Erase,  Titles,  Window,\nStatus,  Page.\"   The  long  prompt  for the  \"Copy\"  command\nexplains  what  function  the  \"Copy\"  command will  perform:\n\"Copy a  cell or range  of cells.\"   The long prompt  for the\n\"Quit\" command reads, \"End 1-2-3 session (Have you saved your\nwork?).\"\n\n                             -8-\r                                          8\r\r\n\nexpressive elements,  and to what extent,  if any, functional\n\nconstraints  limited the  number  of possible  ways that  the\n\nLotus menu command hierarchy could  have been arranged at the\n\ntime of its creation.  See Borland III, 831 F.  Supp. at 207.\r                                                  \n\nAdditionally,  the  district  court  granted   Lotus  summary\n\njudgment on Borland's affirmative  defense of waiver, but not\n\non its affirmative  defenses of laches and estoppel.  Borland\r                                                                         \n\nII, 799 F. Supp. at 222-23.\r              \n\n          Immediately following the district  court's summary\n\njudgment   decision,  Borland  removed  the  Lotus  Emulation\n\nInterface  from   its   products.     Thereafter,   Borland's\n\nspreadsheet  programs  no  longer displayed  the  Lotus 1-2-3\n\nmenus to Borland users,  and as a result Borland  users could\n\nno longer communicate with Borland's programs as if they were\n\nusing   a   more  sophisticated   version  of   Lotus  1-2-3.\n\nNonetheless,  Borland's  programs continued  to  be partially\n\ncompatible  with Lotus  1-2-3, for  Borland retained  what it\n\ncalled  the \"Key Reader\" in  its Quattro Pro  programs.  Once\n\nturned  on,  the Key  Reader  allowed  Borland's programs  to\n\n                    \r                                \n\n          Prior to  trial, the parties agreed  to exclude the\ncopying of the long  prompts from the case; Lotus  agreed not\nto contend that Borland had  copied the long prompts, Borland\nagreed not to argue that it had not  copied the long prompts,\nand both sides agreed not to argue that the issue  of whether\nBorland had copied the long prompts was material to any other\nissue in the case.  See Borland III, 831 F. Supp. at 208.\r                                               \n\n                             -9-\r                                          9\r\r\n\nunderstand and perform  some Lotus 1-2-3  macros.3  With  the\n\nKey  Reader on, the  Borland programs used  Quattro Pro menus\n\nfor display,  interaction, and macro  execution, except  when\n\nthey encountered a slash  (\"/\") key in a macro  (the starting\n\nkey  for  any   Lotus  1-2-3  macro),  in   which  case  they\n\ninterpreted the macro as having been written for Lotus 1-2-3.\n\nAccordingly, people who wrote  or purchased macros to shorten\n\nthe  time needed to perform an operation in Lotus 1-2-3 could\n\nstill use  those macros in Borland's programs.4  The district\n\ncourt  permitted  Lotus  to  file  a  supplemental  complaint\n\nalleging that the Key Reader infringed its copyright.  \n\n          The parties agreed to  try the remaining  liability\n\nissues without a jury.   The district court held  two trials,\n\nthe Phase I trial covering all remaining issues raised in the\n\noriginal complaint (relating to the  Emulation Interface) and\n\nthe  Phase  II  trial  covering  all  issues  raised  in  the\n\nsupplemental complaint (relating to the Key Reader).   At the\n\nPhase  I  trial,  there  were  no  live  witnesses,  although\n\nconsiderable  testimony   was  presented   in  the  form   of\n\naffidavits and deposition excerpts.  The district court ruled\n\nupon evidentiary objections counsel interposed.  At the Phase\n\n                    \r                                \n\n3.  Because  Borland's programs  could no longer  display the\nLotus menu command hierarchy to users, the Key Reader did not\nallow debugging or modification of  macros, nor did it permit\nthe execution of most interactive macros.  \n\n4.  See  Borland IV,  831  F. Supp.  at  226-27, for  a  more\r                               \ndetailed explanation of macros and the Key Reader.\n\n                             -10-\r                                          10\r\r\n\nII  trial,  there  were  two  live witnesses,  each  of  whom\n\ndemonstrated the programs for the district court.\n\n          After the close of the  Phase I trial, the district\n\ncourt permitted Borland  to amend its  answer to include  the\n\naffirmative  defense  of \"fair  use.\"    Because Borland  had\n\npresented all of the evidence supporting its fair-use defense\n\nduring the Phase  I trial,  but Lotus had  not presented  any\n\nevidence  on fair  use (as  the defense  had not  been raised\n\nbefore  the conclusion  of the  Phase I trial),  the district\n\ncourt  considered  Lotus's  motion  for  judgment  on partial\n\nfindings of fact.  See  Fed. R. Civ. P. 52(c).   The district\r                                  \n\ncourt held  that Borland had  failed to show that  its use of\n\nthe  Lotus  1-2-3 menu  command  hierarchy  in its  Emulation\n\nInterface was a fair use.   See Borland III, 831 F.  Supp. at\r                                                       \n\n208.\n\n          In  its Phase I-trial  decision, the district court\n\nfound that \"each of the Borland emulation interfaces contains\n\na  virtually identical copy of  the 1-2-3 menu  tree and that\n\nthe  1-2-3  menu  tree  is  capable  of  a  wide  variety  of\n\nexpression.\"  Borland III, 831 F. Supp. at 218.  The district\r                                     \n\ncourt also rejected Borland's  affirmative defenses of laches\n\nand estoppel.  Id. at 218-23.\r                              \n\n          In its Phase II-trial decision, the  district court\n\nfound that  Borland's Key  Reader file included  \"a virtually\n\nidentical  copy  of  the   Lotus  menu  tree  structure,  but\n\n                             -11-\r                                          11\r\r\n\nrepresented in a  different form  and with  first letters  of\n\nmenu  command names in place of the full menu command names.\"\n\nBorland IV, 831  F. Supp. at 228.  In  other words, Borland's\r                      \n\nprograms no longer included the Lotus command terms, but only\n\ntheir first letters.  The district court held that \"the Lotus\n\nmenu  structure,  organization,  and  first  letters  of  the\n\ncommand names  .  .  . constitute  part  of  the  protectable\n\nexpression   found  in   [Lotus   1-2-3].\"     Id.  at   233.\r                                                              \n\nAccordingly,  the  district  court  held that  with  its  Key\n\nReader, Borland had infringed Lotus's copyright.  Id. at 245.\r                                                                 \n\nThe  district  court  also  rejected   Borland's  affirmative\n\ndefenses of waiver, laches,  estoppel, and fair use.   Id. at\r                                                                      \n\n235-45.    The  district   court  then  entered  a  permanent\n\ninjunction against  Borland, id.  at 245, from  which Borland\r                                            \n\nappeals.\n\n          This appeal concerns only Borland's copying  of the\n\nLotus menu  command hierarchy  into its Quattro  programs and\n\nBorland's affirmative  defenses to  such copying.   Lotus has\n\nnot cross-appealed; in other words, Lotus does not contend on\n\nappeal  that the district court erred in finding that Borland\n\nhad not copied  other elements  of Lotus 1-2-3,  such as  its\n\nscreen displays.\n\n                             II.\r                                         II.\r                                            \n\n                          Discussion\r                                      Discussion\r                                                \n\n                             -12-\r                                          12\r\r\n\n          On  appeal,  Borland  does  not   dispute  that  it\n\nfactually  copied the words and arrangement of the Lotus menu\n\ncommand hierarchy.  Rather,  Borland argues that it \"lawfully\n\ncopied  the unprotectable  menus  of Lotus  1-2-3.\"   Borland\n\ncontends  that  the  Lotus  menu  command  hierarchy  is  not\n\ncopyrightable because  it is  a system, method  of operation,\n\nprocess, or procedure foreclosed from protection by 17 U.S.C.\n\n   102(b).    Borland  also raises  a  number  of affirmative\n\ndefenses.\n\n                             -13-\r                                          13\r\r\n\nA.  Copyright Infringement Generally\r                                                \n\n          To  establish  copyright infringement,  a plaintiff\n\nmust  prove \"(1)  ownership  of a  valid  copyright, and  (2)\n\ncopying  of  constituent  elements   of  the  work  that  are\n\noriginal.\"  Feist Publications, Inc. v. Rural Tel. Serv. Co.,\r                                                                        \n\n499 U.S. 340, 361 (1991); see also Data Gen. Corp. v. Grumman\r                                                                         \n\nSys.  Support Corp., 36 F.3d 1147, 1160 n.19 (1st Cir. 1994);\r                               \n\nConcrete Mach. Co. v. Classic Lawn Ornaments,  Inc., 843 F.2d\r                                                               \n\n600, 605  (1st  Cir. 1988).   To  show ownership  of a  valid\n\ncopyright  and  therefore  satisfy  Feist's  first  prong,  a\r                                                     \n\nplaintiff must prove that the work as a whole is original and\n\nthat  the   plaintiff  complied  with   applicable  statutory\n\nformalities.   See Engineering  Dynamics, Inc.  v. Structural\r                                                                         \n\nSoftware,  Inc., 26  F.3d 1335,  1340 (5th  Cir. 1994).   \"In\r                           \n\njudicial proceedings, a certificate of copyright registration\n\nconstitutes  prima facie  evidence  of  copyrightability  and\r                                    \n\nshifts  the burden to  the defendant  to demonstrate  why the\n\ncopyright is not valid.\"  Bibbero Sys., Inc. v. Colwell Sys.,\r                                                                         \n\nInc., 893 F.2d 1104, 1106 (9th Cir. 1990); see also 17 U.S.C.\r                                                               \n\n   410(c); Folio  Impressions, Inc.  v. Byer  California, 937\r                                                                    \n\nF.2d  759, 763 (2d Cir. 1991) (presumption of validity may be\n\nrebutted).\n\n          To  show actionable  copying and  therefore satisfy\n\nFeist's  second prong, a plaintiff must  first prove that the\r                 \n\nalleged  infringer copied  plaintiff's copyrighted work  as a\n\n                             -14-\r                                          14\r\r\n\nfactual  matter; to  do this,  he or  she may  either present\n\ndirect   evidence  of   factual  copying   or,  if   that  is\n\nunavailable, evidence  that the alleged  infringer had access\n\nto  the   copyrighted  work   and  that  the   offending  and\n\ncopyrighted works  are so  similar that  the court  may infer\n\nthat there was factual  copying (i.e., probative similarity).\n\nEngineering  Dynamics, 26  F.3d  at 1340;  see also  Concrete\r                                                                         \n\nMach.,  843 F.2d at 606.  The  plaintiff must then prove that\r                 \n\nthe copying  of copyrighted material was so extensive that it\n\nrendered  the offending  and copyrighted  works substantially\n\nsimilar.  See Engineering Dynamics, 26 F.3d at 1341.\r                                              \n\n          In this appeal, we are  faced only with whether the\n\nLotus menu command hierarchy  is copyrightable subject matter\n\nin  the first instance, for Borland concedes that Lotus has a\n\nvalid  copyright in  Lotus 1-2-3  as a  whole5 and  admits to\n\nfactually copying  the Lotus  menu command  hierarchy.  As  a\n\nresult,  this appeal is in a very different posture from most\n\n                    \r                                \n\n5.  Computer   programs   receive  copyright   protection  as\n\"literary  works.\"    See  17 U.S.C.     102(a)(1)  (granting\r                                     \nprotection to \"literary works\") and 17 U.S.C.   101 (defining\r                                               \n\"literary works\" as \"works . . . expressed in words, numbers,\nor other  verbal or numerical symbols  or indicia, regardless\nof  the  nature  of  the material  objects,  such  as  books,\nperiodicals, phonorecords,  film, tapes, disks, or  cards, in\r                                                          \nwhich  they are  embodied\" (emphasis  added)); see  also H.R.\r                                                                    \nRep. No. 1476, 94th  Cong., 2d Sess. 54 (1976),  reprinted in\r                                                                         \n1976 U.S.C.C.A.N. 5659, 5667 (\"The  term `literary works' . .\n. includes computer data bases, and  computer programs to the\nextent that  they incorporate authorship in  the programmer's\nexpression of original ideas, as distinguished from the ideas\nthemselves.\").\n\n                             -15-\r                                          15\r\r\n\ncopyright-infringement  cases,   for  copyright  infringement\n\ngenerally turns on whether the defendant has copied protected\n\nexpression as  a factual matter.   Because of  this different\n\nposture,  most  copyright-infringement  cases   provide  only\n\nlimited help  to us  in deciding this  appeal.  This  is true\n\neven with respect to  those copyright-infringement cases that\n\ndeal with computers and computer software.\n\nB.  Matter of First Impression\r                                          \n\n          Whether   a   computer   menu   command   hierarchy\n\nconstitutes copyrightable subject matter is a matter of first\n\nimpression  in this court.  While some other courts appear to\n\nhave touched  on it briefly  in dicta, see,  e.g., Autoskill,\r                                                                         \n\nInc.  v. National  Educ. Support Sys.,  Inc., 994  F.2d 1476,\r                                                        \n\n1495 n.23 (10th Cir.),  cert. denied, 114 S. Ct.  307 (1993),\r                                                \n\nwe know of no cases that deal with the copyrightability  of a\n\nmenu  command hierarchy  standing on  its own  (i.e., without\n\nother  elements  of  the   user  interface,  such  as  screen\n\ndisplays,  in issue).   Thus  we are navigating  in uncharted\n\nwaters.\n\n          Borland  vigorously  argues,   however,  that   the\n\nSupreme Court charted our course more than 100 years ago when\n\nit decided Baker v. Selden, 101 U.S. 99 (1879).   In Baker v.\r                                                                      \n\nSelden,  the  Court held  that  Selden's  copyright over  the\r                  \n\ntextbook in which he  explained his new way to  do accounting\n\n                             -16-\r                                          16\r\r\n\ndid not  grant him a  monopoly on the  use of  his accounting\n\nsystem.6  Borland argues:  \n\n          The facts  of Baker v.  Selden, and  even\r                                                    \n          the arguments advanced by the  parties in\n          that case, are identical to those in this\n          case.  The  only difference  is that  the\n          \"user interface\" of  Selden's system  was\n          implemented  by pen and paper rather than\n          by computer.\n\nTo  demonstrate that  Baker v.  Selden and  this  appeal both\r                                                  \n\ninvolve accounting systems, Borland even  supplied this court\n\nwith a video that, with special effects, shows Selden's paper\n\nforms \"melting\" into a  computer screen and transforming into\n\nLotus 1-2-3.\n\n          We do not think  that Baker v. Selden is  nearly as\r                                                           \n\nanalogous to this appeal as Borland claims.  Of course, Lotus\n\n1-2-3  is a  computer spreadsheet,  and as  such its  grid of\n\nhorizontal rows and  vertical columns certainly resembles  an\n\naccounting  ledger or  any  other paper  spreadsheet.   Those\n\ngrids, however, are not  at issue in this appeal  for, unlike\n\nSelden,  Lotus does  not claim  to have  a monopoly  over its\n\naccounting  system.    Rather, this  appeal  involves Lotus's\n\nmonopoly over the  commands it uses to operate  the computer.\n\nAccordingly,  this  appeal  is   not,  as  Borland  contends,\n\n\"identical\" to Baker v. Selden.\r                                          \n\nC.  Altai\r                     \n\n                    \r                                \n\n6.  Selden's system  of double-entry bookkeeping  is the  now\nalmost-universal T-accounts system.\n\n                             -17-\r                                          17\r\r\n\n          Before we analyze  whether the  Lotus menu  command\n\nhierarchy  is  a system,  method  of  operation, process,  or\n\nprocedure, we  first consider  the applicability of  the test\n\nthe Second  Circuit set forth in Computer  Assoc. Int'l, Inc.\r                                                                         \n\nv. Altai,  Inc., 982  F.2d 693 (2d  Cir. 1992).7   The Second\r                           \n\nCircuit  designed its Altai test  to deal with  the fact that\r                                       \n\ncomputer programs,  copyrighted as  \"literary works,\"  can be\n\ninfringed by what is known as \"nonliteral\"  copying, which is\n\ncopying that  is  paraphrased or  loosely paraphrased  rather\n\nthan  word  for word.   See  id.  at 701  (citing nonliteral-\r                                            \n\ncopying cases); see also 3 Melville B. Nimmer &amp; David Nimmer,\r                                    \n\nNimmer on  Copyright   13.03[A][1]  (1993).  When  faced with\r                                \n\nnonliteral-copying  cases,  courts  must   determine  whether\n\nsimilarities  are due merely to  the fact that  the two works\n\nshare  the  same  underlying  idea or  whether  they  instead\n\nindicate  that the  second author  copied the  first author's\n\nexpression.   The Second  Circuit designed its  Altai test to\r                                                                 \n\ndeal   with   this  situation   in   the  computer   context,\n\nspecifically  with  whether   one  computer  program   copied\n\nnonliteral expression from another program's code.\n\n                    \r                                \n\n7.  We consider the Altai test because both  parties and many\r                                     \nof the amici focus on it so heavily.  Borland, in particular,\r                        \nis highly  critical of the  district court for  not employing\nthe  Altai test.   Borland  does not,  however, indicate  how\r                      \nusing  that test  would  have been  dispositive in  Borland's\nfavor.  Interestingly, Borland  appears to contradict its own\nreasoning at  times by  criticizing the applicability  of the\nAltai test.\r                 \n\n                             -18-\r                                          18\r\r\n\n          The Altai test involves three  steps:  abstraction,\r                               \n\nfiltration,  and comparison.   The abstraction  step requires\n\ncourts to  \"dissect the allegedly  copied program's structure\n\nand isolate  each level of abstraction  contained within it.\"\n\nAltai, 982 F.2d at 707.  This step enables courts to identify\r                 \n\nthe   appropriate   framework   within  which   to   separate\n\nprotectable  expression  from  unprotected  ideas.    Second,\n\ncourts apply a \"filtration\" step  in which they examine  \"the\n\nstructural  components  at  each  level  of   abstraction  to\n\ndetermine whether  their particular inclusion  at that  level\n\nwas `idea'  or was dictated by  considerations of efficiency,\n\nso  as to be necessarily incidental to that idea; required by\n\nfactors  external to  the program itself;  or taken  from the\n\npublic domain.\"   Id.  Finally, courts  compare the protected\r                                 \n\nelements of the infringed work (i.e., those that survived the\n\nfiltration  screening) to the  corresponding elements  of the\n\nallegedly  infringing work  to  determine whether  there  was\n\nsufficient  copying  of   protected  material  to  constitute\n\ninfringement.  Id. at 710.\r                              \n\n          In the  instant appeal, we are  not confronted with\n\nalleged nonliteral copying of computer  code.  Rather, we are\n\nfaced with Borland's deliberate, literal copying of the Lotus\n\nmenu command hierarchy.  Thus,  we must determine not whether\n\nnonliteral  copying occurred  in  some amorphous  sense,  but\n\n                             -19-\r                                          19\r\r\n\nrather whether the literal copying of  the Lotus menu command\n\nhierarchy constitutes copyright infringement.\n\n          While the Altai test may provide a useful framework\r                                     \n\nfor  assessing  the alleged  nonliteral  copying of  computer\n\ncode, we find  it to be of  little help in  assessing whether\n\nthe literal  copying of a menu  command hierarchy constitutes\n\ncopyright infringement.   In  fact, we  think that the  Altai\r                                                                         \n\ntest in this context may  actually be misleading because,  in\n\ninstructing courts  to abstract the various  levels, it seems\n\nto  encourage  them  to  find  a  base  level  that  includes\n\ncopyrightable subject matter that, if literally copied, would\n\nmake the  copier liable  for copyright infringement.8   While\n\nthat  base (or  literal) level  would not  be  at issue  in a\n\nnonliteral-copying case  like Altai, it is  precisely what is\r                                               \n\nat  issue in  this appeal.   We  think that  abstracting menu\n\ncommand hierarchies  down to  their individual word  and menu\n\nlevels and then filtering idea from expression at that stage,\n\nas  both the  Altai  and the  district  court tests  require,\r                               \n\nobscures  the more  fundamental  question of  whether a  menu\n\ncommand hierarchy  can be  copyrighted at all.   The  initial\n\n                    \r                                \n\n8.  We  recognize that  Altai  never states  that every  work\r                                         \ncontains a copyrightable \"nugget\" of  protectable expression.\nNonetheless, the implication is that for literal copying, \"it\nis  not necessary  to determine  the level of  abstraction at\nwhich  similarity  ceases to  consist  of  an `expression  of\nideas,' because literal similarity  by definition is always a\nsimilarity as to  the expression  of ideas.\"   3 Melville  B.\nNimmer  &amp; David  Nimmer,  Nimmer on  Copyright    13.03[A](2)\r                                                          \n(1993).\n\n                             -20-\r                                          20\r\r\n\ninquiry should not be whether individual components of a menu\n\ncommand hierarchy are expressive, but rather whether the menu\n\ncommand hierarchy as  a whole  can be copyrighted.   But  see\r                                                                         \n\nGates  Rubber Co.  v. Bando  Chem. Indus.,  Ltd., 9  F.3d 823\r                                                            \n\n(10th Cir. 1993)  (endorsing Altai's  abstraction-filtration-\r                                              \n\ncomparison test  as a way  of determining whether  \"menus and\n\nsorting criteria\" are copyrightable).\n\nD.    The  Lotus  Menu  Command  Hierarchy:    A  \"Method  of\r                                                                         \n\nOperation\"\r                      \n\n          Borland   argues  that   the  Lotus   menu  command\n\nhierarchy is  uncopyrightable because it is  a system, method\n\nof operation, process, or procedure foreclosed from copyright\n\nprotection  by 17  U.S.C.   102(b).   Section  102(b) states:\n\n\"In no case does copyright protection for an original work of\n\nauthorship extend to  any idea,  procedure, process,  system,\n\nmethod   of  operation,  concept,  principle,  or  discovery,\n\nregardless of the form in  which it is described,  explained,\n\nillustrated, or  embodied in such work.\"  Because we conclude\n\nthat  the  Lotus  menu  command  hierarchy  is  a  method  of\n\noperation,  we do  not consider  whether it  could also  be a\n\nsystem, process, or procedure.  \n\n          We think  that \"method of operation,\"  as that term\n\nis used  in   102(b), refers  to the means by  which a person\n\noperates something, whether it be a car, a food processor, or\n\na  computer.  Thus a text describing how to operate something\n\n                             -21-\r                                          21\r\r\n\nwould  not  extend  copyright  protection to  the  method  of\n\noperation itself; other  people would be free to  employ that\n\nmethod and to describe it in  their own words.  Similarly, if\n\na new  method of  operation  is used  rather than  described,\n\nother people would still  be free to employ or  describe that\n\nmethod.\n\n          We hold that the Lotus menu command hierarchy is an\n\nuncopyrightable  \"method  of  operation.\"    The  Lotus  menu\n\ncommand hierarchy  provides the means by  which users control\n\nand operate Lotus 1-2-3.  If users wish to copy material, for\n\nexample, they use the \"Copy\" command.  If users wish to print\n\nmaterial, they use the  \"Print\" command.  Users must  use the\n\ncommand terms to tell the  computer what to do.   Without the\n\nmenu command hierarchy, users would not be able to access and\n\ncontrol,  or indeed  make  use of,  Lotus 1-2-3's  functional\n\ncapabilities.\n\n          The Lotus  menu command hierarchy  does not  merely\n\nexplain  and present Lotus 1-2-3's functional capabilities to\n\nthe  user; it also serves as the  method by which the program\n\nis operated and controlled.  The Lotus menu command hierarchy\n\nis  different  from the  Lotus  long  prompts, for  the  long\n\nprompts are not  necessary to the  operation of the  program;\n\nusers  could operate Lotus 1-2-3  even if there  were no long\n\n                             -22-\r                                          22\r\r\n\nprompts.9     The  Lotus  menu  command   hierarchy  is  also\n\ndifferent  from the Lotus screen displays, for users need not\n\n\"use\" any expressive aspects of  the screen displays in order\n\nto  operate Lotus 1-2-3; because the way the screens look has\n\nlittle bearing on  how users control the  program, the screen\n\ndisplays   are  not   part  of   Lotus  1-2-3's   \"method  of\n\noperation.\"10    The Lotus  menu  command  hierarchy is  also\n\ndifferent from the  underlying computer  code, because  while\n\ncode  is  necessary  for the  program  to  work,  its precise\n\nformulation  is not.    In other  words,  to offer  the  same\n\ncapabilities as  Lotus 1-2-3,  Borland did not  have to  copy\n\nLotus's underlying  code (and  indeed it  did not);  to allow\n\nusers to operate its programs in substantially the same  way,\n\nhowever,  Borland   had  to  copy  the   Lotus  menu  command\n\nhierarchy.     Thus   the   Lotus  1-2-3   code   is  not   a\n\nuncopyrightable \"method of operation.\"11\n\n                    \r                                \n\n9.  As the Lotus long prompts are not before us on appeal, we\ntake no  position on  their copyrightability, although  we do\nnote  that a  strong argument  could be  made that  the brief\nexplanations they provide \"merge\" with the underlying idea of\nexplaining such functions.  See Morrissey v. Procter &amp; Gamble\r                                                                         \nCo.,  379 F.2d 675, 678-79 (1st Cir. 1967) (when the possible\r               \nways  to express an idea are limited, the expression \"merges\"\nwith the  idea and is therefore  uncopyrightable; when merger\noccurs, identical copying is permitted).\n\n10.  As they are not before us on appeal, we take no position\non  whether  the  Lotus  1-2-3   screen  displays  constitute\noriginal expression capable of being copyrighted.\n\n11.  Because the Lotus 1-2-3 code is not before us on appeal,\nwe take no position on whether it is copyrightable.  We note,\nhowever, that original computer codes generally are protected\n\n                             -23-\r                                          23\r\r\n\n          The district court held that the Lotus menu command\n\nhierarchy,  with  its  specific  choice  and  arrangement  of\n\ncommand terms,  constituted an \"expression\" of  the \"idea\" of\n\noperating   a   computer  program   with   commands  arranged\n\nhierarchically into menus  and submenus.  Borland  II, 799 F.\r                                                                 \n\nSupp. at 216.  Under the district court's  reasoning, Lotus's\n\ndecision to  employ hierarchically arranged command  terms to\n\noperate its program could  not foreclose its competitors from\n\nalso  employing  hierarchically  arranged  command  terms  to\n\noperate  their  programs,  but  it did  foreclose  them  from\n\nemploying the  specific command  terms  and arrangement  that\n\nLotus  had used.  In effect, the district court limited Lotus\n\n1-2-3's \"method of operation\" to an abstraction.\n\n          Accepting the  district  court's finding  that  the\n\nLotus developers made some expressive choices in choosing and\n\narranging the  Lotus command terms, we  nonetheless hold that\n\nthat  expression is not  copyrightable because it  is part of\n\nLotus  1-2-3's \"method of operation.\"   We do  not think that\n\n\"methods of operation\" are  limited to abstractions;  rather,\n\nthey  are the means  by which a user  operates something.  If\n\nspecific  words are  essential to  operating something,  then\n\nthey are  part of a \"method  of operation\" and, as  such, are\n\n                    \r                                \n\nby copyright.  See, e.g., Altai, 982 F.2d at 702  (\"It is now\r                                           \nwell settled that the  literal elements of computer programs,\ni.e., their  source  and object  codes,  are the  subject  of\ncopyright protection.\") (citing cases).\n\n                             -24-\r                                          24\r\r\n\nunprotectable.  This is so whether  they must be highlighted,\n\ntyped  in, or even spoken, as computer programs no doubt will\n\nsoon be controlled by spoken words.\n\n          The  fact that Lotus developers could have designed\n\nthe Lotus menu command hierarchy differently is immaterial to\n\nthe question of  whether it is a  \"method of operation.\"   In\n\nother words,  our initial  inquiry is  not whether the  Lotus\n\nmenu   command   hierarchy  incorporates   any  expression.12\n\nRather, our initial inquiry is whether the Lotus menu command\n\nhierarchy  is a \"method of operation.\"  Concluding, as we do,\n\nthat  users  operate Lotus  1-2-3  by  using  the Lotus  menu\n\ncommand  hierarchy, and  that the  entire Lotus  menu command\n\nhierarchy is essential  to operating Lotus  1-2-3, we do  not\n\ninquire further  whether that method of  operation could have\n\nbeen designed differently.   The \"expressive\" choices of what\n\nto  name the  command terms  and how  to arrange them  do not\n\nmagically  change the uncopyrightable  menu command hierarchy\n\ninto copyrightable subject matter.\n\n          Our  holding that  \"methods of  operation\"  are not\n\nlimited to mere abstractions is bolstered by Baker v. Selden.\r                                                                        \n\nIn Baker, the Supreme Court explained that \r                    \n\n          the  teachings of  science and  the rules\n          and  methods  of  useful art  have  their\n          final end  in  application and  use;  and\n          this  application  and use  are  what the\n\n                    \r                                \n\n12.  We  think that  the  Altai test  would contemplate  this\r                                           \nbeing the initial inquiry.\n\n                             -25-\r                                          25\r\r\n\n          public derive from  the publication of  a\n          book  which  teaches  them.  .  .  .  The\n          description of the art in a  book, though\n          entitled  to  the  benefit of  copyright,\n          lays no foundation for an exclusive claim\n          to the art itself.  The object of the one\n          is explanation; the  object of the  other\n          is  use.   The former  may be  secured by\n          copyright.    The  latter  can   only  be\n          secured, if it can  be secured at all, by\n          letters-patent.\n\nBaker v. Selden, 101  U.S. at 104-05.   Lotus wrote its  menu\r                           \n\ncommand hierarchy so that  people could learn it and  use it.\n\nAccordingly, it  falls  squarely within  the  prohibition  on\n\ncopyright  protection  established  in  Baker  v.  Selden and\r                                                                     \n\ncodified by Congress in   102(b).\n\n          In many  ways, the Lotus menu  command hierarchy is\n\nlike  the  buttons used  to  control, say,  a  video cassette\n\nrecorder (\"VCR\").   A VCR  is a  machine that enables  one to\n\nwatch and record video tapes.  Users operate VCRs by pressing\n\na  series of  buttons  that are  typically labelled  \"Record,\n\nPlay, Reverse,  Fast Forward,  Pause, Stop/Eject.\"   That the\n\nbuttons  are arranged  and  labeled  does  not  make  them  a\n\n\"literary work,\" nor does it make them an \"expression\" of the\n\nabstract \"method of  operating\" a  VCR via a  set of  labeled\n\nbuttons.  Instead, the buttons  are themselves the \"method of\n\noperating\" the VCR.\n\n          When a  Lotus 1-2-3 user chooses  a command, either\n\nby  highlighting  it on  the screen  or  by typing  its first\n\nletter, he or  she effectively pushes a button.  Highlighting\n\n                             -26-\r                                          26\r\r\n\nthe  \"Print\" command on the screen, or typing the letter \"P,\"\n\nis analogous to pressing a VCR button labeled \"Play.\"\n\n          Just as one could not  operate a buttonless VCR, it\n\nwould be impossible to  operate Lotus 1-2-3 without employing\n\nits menu command hierarchy.  Thus the Lotus command terms are\n\nnot  equivalent to the labels  on the VCR's  buttons, but are\n\ninstead  equivalent to  the buttons  themselves.   Unlike the\n\nlabels  on a VCR's buttons, which merely make operating a VCR\n\neasier by  indicating the buttons' functions,  the Lotus menu\n\ncommands are essential to operating Lotus 1-2-3.  Without the\n\nmenu  commands, there  would be  no way  to \"push\"  the Lotus\n\nbuttons,  as one  could push  unlabeled VCR  buttons.   While\n\nLotus could probably have designed a user interface for which\n\nthe command  terms were mere labels,  it did not do  so here.\n\nLotus 1-2-3 depends for  its operation on use of  the precise\n\ncommand terms that make up the Lotus menu command hierarchy.\n\n          One might  argue that  the buttons for  operating a\n\nVCR  are not  analogous  to  the  commands  for  operating  a\n\ncomputer program  because VCRs are not copyrightable, whereas\n\ncomputer programs are.   VCRs may not be  copyrighted because\n\nthey  do not  fit within  any of the    102(a)  categories of\n\ncopyrightable  works;  the closest  they come  is \"sculptural\n\nwork.\"  Sculptural works, however,  are subject to a \"useful-\n\narticle\" exception whereby \"the design of a useful  article .\n\n.  . shall be considered  a pictorial, graphic, or sculptural\n\n                             -27-\r                                          27\r\r\n\nwork  only if,  and  only to  the  extent that,  such  design\n\nincorporates pictorial, graphic, or sculptural  features that\n\ncan  be  identified  separately  from,  and  are  capable  of\n\nexisting independently  of, the  utilitarian  aspects of  the\n\narticle.\"   17  U.S.C.    101.   A  \"useful  article\" is  \"an\n\narticle having an intrinsic  utilitarian function that is not\n\nmerely  to portray the appearance of the article or to convey\n\ninformation.\"  Id.   Whatever expression there may be  in the\r                              \n\narrangement of the parts of a VCR is  not capable of existing\n\nseparately  from the VCR itself, so an ordinary VCR would not\n\nbe copyrightable.\n\n          Computer programs, unlike  VCRs, are  copyrightable\n\nas \"literary works.\"   17 U.S.C.   102(a).   Accordingly, one\n\nmight argue, the \"buttons\" used to operate a computer program\n\nare not like the buttons used  to operate a VCR, for they are\n\nnot subject to  a useful-article exception.  The response, of\n\ncourse, is that the arrangement of buttons on a VCR would not\n\nbe  copyrightable even  without  a useful-article  exception,\n\nbecause  the   buttons  are  an  uncopyrightable  \"method  of\n\noperation.\"   Similarly, the \"buttons\" of  a computer program\n\nare also an uncopyrightable \"method of operation.\"\n\n          That the Lotus menu  command hierarchy is a \"method\n\nof operation\"  becomes  clearer when  one  considers  program\n\ncompatibility.  Under Lotus's theory, if a user  uses several\n\ndifferent programs, he or  she must learn how to  perform the\n\n                             -28-\r                                          28\r\r\n\nsame operation in a different way for each program used.  For\n\nexample, if the  user wanted the computer to  print material,\n\nthen the  user would  have to  learn not  just one  method of\n\noperating  the  computer  such   that  it  prints,  but  many\n\ndifferent methods.  We find this absurd.  The fact that there\n\nmay  be many different ways to operate a computer program, or\n\neven many different  ways to operate a computer program using\n\na set of hierarchically arranged command terms, does not make\n\nthe actual method of operation chosen copyrightable; it still\n\nfunctions  as a method for operating the computer and as such\n\nis uncopyrightable.\n\n          Consider  also  that  users employ  the  Lotus menu\n\ncommand  hierarchy in  writing  macros.   Under the  district\n\ncourt's holding, if  the user  wrote a macro  to shorten  the\n\ntime needed  to perform a  certain operation in  Lotus 1-2-3,\n\nthe user  would be  unable to use  that macro to  shorten the\n\ntime  needed  to  perform  that  same  operation  in  another\n\nprogram.  Rather,  the user would have to  rewrite his or her\n\nmacro  using  that  other program's  menu  command hierarchy.\n\nThis is despite the fact that the macro is clearly the user's\n\nown  work product.  We  think that forcing  the user to cause\n\nthe computer to perform the same operation in a different way\n\nignores  Congress's direction  in    102(b) that  \"methods of\n\noperation\" are  not copyrightable.   That programs  can offer\n\nusers the ability to write macros in many different ways does\n\n                             -29-\r                                          29\r\r\n\nnot  change the fact that, once written, the macro allows the\n\nuser to  perform an  operation automatically.   As the  Lotus\n\nmenu command  hierarchy serves as  the basis for  Lotus 1-2-3\n\nmacros, the  Lotus menu  command  hierarchy is  a \"method  of\n\noperation.\"  \n\n          In  holding  that  expression  that is  part  of  a\n\n\"method  of  operation\"  cannot  be copyrighted,  we  do  not\n\nunderstand  ourselves  to  go  against  the  Supreme  Court's\n\nholding in Feist.  In Feist, the Court explained:\r                                       \n\n          The primary objective of copyright is not\n          to reward  the labor  of authors,  but to\n          promote  the  Progress  of   Science  and\n          useful  Arts.   To  this  end,  copyright\n          assures  authors  the   right  to   their\n          original   expression,   but   encourages\n          others to build freely upon the ideas and\n          information conveyed by a work.\n\nFeist, 499 U.S. at 349-50 (quotations and citations omitted).\r                 \n\nWe  do not think  that the Court's  statement that \"copyright\n\nassures  authors  the  right to  their  original  expression\"\n\nindicates that all  expression is necessarily  copyrightable;\n\nwhile   original  expression   is  necessary   for  copyright\n\nprotection,  we do  not  think that  it is  alone sufficient.\n\nCourts must  still inquire whether  original expression falls\n\nwithin  one  of  the  categories  foreclosed  from  copyright\n\nprotection  by     102(b),   such  as  being  a  \"method   of\n\noperation.\"\n\n          We also  note that  in most contexts,  there is  no\n\nneed to \"build\" upon other people's expression, for the ideas\n\n                             -30-\r                                          30\r\r\n\nconveyed by that expression  can be conveyed by  someone else\n\nwithout  copying the  first  author's expression.13   In  the\n\ncontext of methods of operation, however, \"building\" requires\n\nthe use of the precise method of operation already  employed;\n\notherwise,   \"building\"   would  require   dismantling,  too.\n\nOriginal developers are not the only people entitled to build\n\non the methods of  operation they create; anyone can.   Thus,\n\nBorland may  build  on the  method  of operation  that  Lotus\n\ndesigned and  may use  the Lotus  menu  command hierarchy  in\n\ndoing so.\n\n          Our holding  that  methods  of  operation  are  not\n\nlimited to  abstractions goes against Autoskill,  994 F.2d at\r                                                           \n\n1495  n.23,   in  which   the  Tenth  Circuit   rejected  the\n\ndefendant's  argument that  the  keying procedure  used in  a\n\ncomputer  program  was   an  uncopyrightable  \"procedure\"  or\n\n\"method  of operation\" under   102(b).  The program at issue,\n\nwhich  was designed to  test and train  students with reading\n\ndeficiencies,  id.  at  1481,  required  students  to  select\r                              \n\nresponses  to the program's queries \"by pressing the 1, 2, or\n\n3  keys.\"  Id.  at 1495 n.23.   The Tenth  Circuit held that,\r                          \n\n\"for purposes of the preliminary injunction, . . . the record\n\nshowed  that [this]  keying  procedure reflected  at least  a\n\nminimal  degree  of creativity,\"  as  required  by Feist  for\r                                                                    \n\n                    \r                                \n\n13.  When  there are a limited  number of ways  to express an\nidea,  however, the  expression  \"merges\" with  the idea  and\nbecomes uncopyrightable.  Morrissey, 379 F.2d at 678-79.\r                                               \n\n                             -31-\r                                          31\r\r\n\ncopyright protection.  Id.  As an initial matter, we question\r                                      \n\nwhether  a  programmer's  decision  to have  users  select  a\n\nresponse by pressing  the 1, 2, or 3 keys  is original.  More\n\nimportantly,  however,   we  fail  to  see   how  \"a  student\n\nselect[ing] a response by pressing the 1, 2, or 3 keys,\" id.,\r                                                                        \n\ncan be anything but an unprotectable method of operation.14\n\n                             III.\r                                         III.\r                                             \n\n                          Conclusion\r                                      Conclusion\r                                                \n\n          Because  we  hold  that  the  Lotus   menu  command\n\nhierarchy is uncopyrightable subject matter, we further  hold\n\nthat Borland  did not  infringe Lotus's copyright  by copying\n\nit.   Accordingly,  we  need not  consider  any of  Borland's\n\naffirmative defenses.  The judgment of the district court is\n\n          Reversed.\r                               \n\n                                           Concurrence\r                                                                  \n\nfollows.  \r                    \n\n                    \r                                \n\n14.  The  Ninth  Circuit has  also  indicated  in dicta  that\n\"menus,  and keystrokes\"  may  be copyrightable.   Brown  Bag\r                                                                         \nSoftware v. Symantec  Corp., 960 F.2d 1465,  1477 (9th Cir.),\r                                       \ncert. denied,  BB Asset  Management, Inc. v.  Symantec Corp.,\r                                                                        \n113 S. Ct. 198 (1992).  In that case, however,  the plaintiff\ndid  not show that  the defendant had  copied the plaintiff's\nmenus or keystrokes, so the court was not directly faced with\nwhether  the menus or keystrokes constituted an unprotectable\nmethod of operation.  Id.\r                                     \n\n                             -32-\r                                          32\r\r\n\n     BOUDIN, Circuit Judge,  concurring.   The importance  of\r                                      \n\nthis  case, and a slightly  different emphasis in  my view of\n\nthe underlying problem,  prompt me to add a few  words to the\n\nmajority's tightly focused discussion.\n\n                              I.\n\n     Most of the law of copyright and the \"tools\" of analysis\n\nhave  developed  in the  context  of literary  works  such as\n\nnovels, plays,  and  films.   In this  milieu, the  principal\n\nproblem--simply  stated,  if   difficult  to  resolve--is  to\n\nstimulate  creative expression without unduly limiting access\n\nby  others to the broader themes and concepts deployed by the\n\nauthor.  The middle of the spectrum presents close cases; but\n\na \"mistake\" in providing too much protection involves a small\n\ncost:  subsequent authors treating  the same themes must take\n\na few more steps away from the original expression.\n\n     The   problem  presented   by   computer   programs   is\n\nfundamentally different in one respect.  The computer program\n\nis  a means  for  causing  something  to  happen;  it  has  a\r                       \n\nmechanical  utility, an  instrumental role,  in accomplishing\n\nthe world's work.   Granting protection, in other  words, can\n\nhave  some  of  the  consequences  of  patent  protection  in\r                                                         \n\nlimiting other people's ability to perform a task in the most\n\nefficient  manner.      Utility  does   not   bar   copyright\n\n                             -31-\r                                         -31-\r\r\n\n(dictionaries  may  be   copyrighted),  but  it  alters   the\n\ncalculus.\n\n     Of course, the argument for protection is  undiminished,\r                                            \n\nperhaps  even enhanced,  by utility:  if we  want more  of an\n\nintellectual product,  a temporary  monopoly for the  creator\n\nprovides  incentives for  others to  create other,  different\n\nitems in this class.  But the \"cost\" side of the equation may\n\nbe different where  one places  a very high  value on  public\n\naccess  to a useful innovation that may be the most efficient\n\nmeans of performing  a given  task.  Thus,  the argument  for\n\nextending protection may be  the same; but the stakes  on the\n\nother side are much higher. \n\n     It   is  no   accident   that   patent  protection   has\n\npreconditions  that  copyright protection  does not--notably,\n\nthe  requirements of  novelty  and non-obviousness--and  that\n\npatents  are granted  for a  shorter period  than copyrights.\n\nThis problem  of utility  has sometimes manifested  itself in\n\ncopyright cases, such as Baker v. Selden, 101 U.S. 99 (1879),\r                                                    \n\nand been  dealt with through various  formulations that limit\n\ncopyright or create limited rights to copy.  But the case law\n\nand  doctrine addressed  to  utility in  copyright have  been\n\nbrief detours in the general march of copyright law.  \n\n     Requests  for the protection  of computer  menus present\n\nthe  concern with  fencing off  access to  the commons  in an\n\nacute form.  A new menu may be a creative work, but over time\n\n                             -32-\r                                         -32-\r\r\n\nits importance may come to reside more in the investment that\n\nhas been made by users  in learning the menu and  in building\r                                  \n\ntheir own  mini-programs--macros--in reliance upon  the menu.\n\nBetter   typewriter  keyboard  layouts  may  exist,  but  the\n\nfamiliar QWERTY keyboard dominates the market because that is\n\nwhat everyone has learned to use.  See P. David, CLIO and the\r                                                                         \n\nEconomics  of  QWERTY, 75  Am. Econ.  Rev.  332 (1985).   The\r                                                      \n\nQWERTY keyboard is nothing other than a menu of letters.\n\n     Thus, to assume that computer programs are just one more\n\nnew means of  expression, like  a filmed play,  may be  quite\n\nwrong.   The  \"form\"--the written  source  code or  the  menu\n\nstructure depicted  on the  screen--look hauntingly like  the\n\nfamiliar stuff of copyright; but the \"substance\" probably has\n\nmore  to  do with  problems presented  in  patent law  or, as\n\nalready noted,  in those rare  cases where copyright  law has\n\nconfronted   industrially   useful  expressions.     Applying\n\ncopyright  law  to computer  programs  is  like assembling  a\n\njigsaw puzzle whose pieces do not quite fit.\n\n     All of this  would make  no difference  if Congress  had\n\nsquarely confronted the issue,  and given explicit directions\n\nas to  what should be done.  The Copyright Act of 1976 took a\n\ndifferent course.  While Congress said that computer programs\n\nmight be  subject to  copyright protection,  it said  this in\n\nvery  general terms;  and, especially  in    102(b), Congress\n\nadopted a string  of exclusions that if taken literally might\n\n                             -33-\r                                         -33-\r\r\n\neasily   seem   to  exclude   most  computer   programs  from\n\nprotection.   The only  detailed prescriptions  for computers\n\ninvolve narrow  issues (like back-up copies)  of no relevance\n\nhere.\n\n     Of  course,  one  could  still read  the  statute  as  a\n\ncongressional   command  that   the  familiar   doctrines  of\n\ncopyright  law be taken and  applied to computer programs, in\n\ncookie cutter fashion, as if the programs were novels or play\n\nscripts.    Some of  the  cases  involving computer  programs\n\nembody  this  approach.  It  seems  to  me  mistaken  on  two\n\ndifferent grounds:  the tradition  of copyright law,  and the\n\nlikely intent of Congress.\n\n     The  broad-brush conception of copyright protection, the\n\ntime limits, and the formalities have long been prescribed by\n\nstatute.   But the heart  of copyright doctrine--what  may be\n\nprotected and with what limitations and  exceptions--has been\n\ndeveloped by  the courts through  experience with  individual\n\ncases.   B. Kaplan, An Unhurried View of Copyright 40 (1967).\r                                                              \n\nOccasionally Congress addresses a problem in detail.  For the\n\nmost part  the interstitial development of  copyright through\n\nthe courts is our tradition.\n\n     Nothing in  the language  or legislative history  of the\n\n1976  Act, or  at  least nothing  brought  to our  attention,\n\nsuggests that Congress meant the courts to abandon this case-\n\nby-case  approach.   Indeed,  by setting  up    102(b)  as  a\n\n                             -34-\r                                         -34-\r\r\n\ncounterpoint  theme, Congress  has  arguably  recognized  the\n\ntension and left  it for  the courts to  resolve through  the\n\ndevelopment  of  case  law.   And  case  law  development  is\n\nadaptive:   it allows new problems to  be solved with help of\r                    \n\nearlier doctrine, but  it does not preclude  new doctrines to\n\nmeet new situations.\n\n                             II.\n\n     In this case, the raw facts are mostly, if not entirely,\n\nundisputed.   Although the inferences to be drawn may be more\n\ndebatable,  it is very hard to see that Borland has shown any\n\ninterest in the Lotus  menu except as a fall-back  option for\n\nthose users already committed to it by prior experience or in\n\norder to run their own macros using 1-2-3 commands.  At least\n\nfor  the amateur,  accessing the  Lotus menu  in the  Borland\n\nQuattro or Quattro Pro program takes some effort.\n\n     Put differently, it is unlikely that users who value the\n\nLotus menu  for its  own sake--independent of  any investment\n\nthey  have made  themselves  in learning  Lotus' commands  or\n\ncreating macros dependent upon them--would choose the Borland\n\nprogram  in  order  to  secure  access  to  the  Lotus  menu.\n\nBorland's success  is due primarily  to other features.   Its\n\nrationale for  deploying the  Lotus  menu bears  the ring  of\n\ntruth.\n\n     Now,  any  use  of  the  Lotus  menu  by  Borland  is  a\n\ncommercial  use  and deprives  Lotus  of  a  portion  of  its\n\n                             -35-\r                                         -35-\r\r\n\n\"reward,\" in the sense that an  infringement claim if allowed\n\nwould  increase  Lotus'  profits.     But  this  is  circular\n\nreasoning: broadly speaking, every limitation on copyright or\n\nprivileged use diminishes the reward of the original creator.\n\n Yet  not every  writing  is copyrightable  or  every use  an\n\ninfringement.   The  provision  of reward  is one  concern of\n\ncopyright  law, but  it is  not the  only one.   If  it were,\n\ncopyrights  would   be  perpetual  and  there   would  be  no\n\nexceptions.\n\n     The present  case is  an unattractive one  for copyright\n\nprotection  of the menu.   The menu  commands (e.g., \"print,\"\r                                                               \n\n\"quit\") are  largely for  standard procedures that  Lotus did\n\nnot invent and are common words that Lotus cannot monopolize.\n\nWhat is  left is the particular  combination and sub-grouping\n\nof  commands in a pattern devised by Lotus.  This arrangement\n\nmay have  a more  appealing logic and  ease of use  than some\n\nother configurations; but there is a certain arbitrariness to\n\nmany of the choices.\n\n     If Lotus is  granted a monopoly  on this pattern,  users\n\nwho  have learned  the command  structure  of Lotus  1-2-3 or\n\ndevised their own  macros are  locked into Lotus,  just as  a\n\ntypist  who  has learned  the  QWERTY keyboard  would  be the\n\ncaptive of anyone  who had  a monopoly on  the production  of\n\nsuch  a keyboard.  Apparently,  for a period  Lotus 1-2-3 has\n\nhad such  sway in the market  that it has represented  the de\r                                                                         \n\n                             -36-\r                                         -36-\r\r\n\nfacto standard for electronic  spreadsheet commands.  So long\r                 \n\nas Lotus is the superior spreadsheet--either in quality or in\n\nprice--there may be nothing wrong with this advantage.\n\n     But if a better  spreadsheet comes along, it is  hard to\n\nsee why customers who have learned the Lotus menu and devised\n\nmacros for it should  remain captives of Lotus because  of an\n\ninvestment  in learning made by  the users and  not by Lotus.\n\nLotus  has  already reaped  a  substantial  reward for  being\n\nfirst; assuming  that the Borland program is now better, good\n\nreasons exist for freeing it to  attract old Lotus customers:\n\nto  enable the  old  customers to  take  advantage of  a  new\n\nadvance,  and to reward Borland  in turn for  making a better\n\nproduct.   If  Borland has  not made  a better  product, then\n\ncustomers will remain with Lotus anyway.\n\n     Thus, for me the question is not whether  Borland should\n\nprevail  but  on  what  basis.    Various  avenues  might  be\n\ntraveled, but the main choices  are between holding that  the\n\nmenu  is not  protectable  by copyright  and  devising a  new\n\ndoctrine that Borland's  use is privileged.   No solution  is\n\nperfect  and no  intermediate  appellate court  can make  the\n\nfinal choice.\n\n     To  call the  menu a  \"method of  operation\" is,  in the\n\ncommon use of those words, a defensible position.  After all,\n\nthe purpose  of the menu  is not to be  admired as a  work of\n\nliterary or pictorial art.  It is to transmit directions from\n\n                             -37-\r                                         -37-\r\r\n\nthe user to the computer, i.e., to operate the computer.  The\r                                                      \n\nmenu is also a \"method\" in the dictionary sense because it is\n\na \"planned way of doing something,\" an \"order or system,\" and\n\n(aptly  here) an \"orderly or systematic arrangement, sequence\n\nor the like.\"  Random  House Webster's College Dictionary 853\r                                                                     \n\n(1991).\n\n     A different approach  would be to say that Borland's use\n\nis privileged  because, in the context  already described, it\n\nis  not seeking  to appropriate  the advances made  by Lotus'\n\nmenu;  rather, having  provided  an arguably  more attractive\n\nmenu  of its  own, Borland  is merely  trying to  give former\n\nLotus users an  option to exploit their  own prior investment\n\nin learning  or in  macros.   The difference is  that such  a\n\nprivileged  use  approach  would  not  automatically  protect\n\nBorland  if  it  had  simply  copied  the  Lotus menu  (using\n\ndifferent codes), contributed nothing  of its own, and resold\n\nLotus under the Borland label.\n\n     The  closest analogue  in conventional copyright  is the\n\nfair use doctrine.   E.g., Harper &amp; Row, Publishers,  Inc. v.\r                                                                      \n\nNation Enters.,  471 U.S.  539 (1985).   Although invoked  by\r                          \n\nBorland,  it has  largely  been brushed  aside  in this  case\n\nbecause the Supreme Court has said that it is \"presumptively\"\n\nunavailable where the use is a \"commercial\" one.   See id. at\r                                                                      \n\n562.   But see Campbell v. Acuff-Rose Music, Inc., 114 S. Ct.\r                                                             \n\n1164, 1174 (1994).  In my view, this is something less than a\n\n                             -38-\r                                         -38-\r\r\n\ndefinitive  answer;  \"presumptively\" does  not  mean \"always\"\n\nand, in  any event, the doctrine  of fair use  was created by\n\nthe courts and can be adapted to new purposes.\n\n     But  a privileged  use doctrine would  certainly involve\n\nproblems of its own.  It might more closely tailor the limits\n\non  copyright protection  to  the reasons  for limiting  that\n\nprotection;  but it  would  entail a  host of  administrative\n\nproblems that  would  cause cost  and delay,  and would  also\n\nreduce  the  ability of  the  industry  to predict  outcomes.\n\nIndeed,  to  the  extent that  Lotus'  menu  is an  important\n\nstandard in the  industry, it  might be argued  that any  use\n\nought to be deemed privileged.\n\n     In  sum,  the majority's  result  persuades  me and  its\n\nformulation  is as good, if  not better, than  any other that\n\noccurs  to  me now  as  within the  reach  of  courts.   Some\n\nsolutions (e.g., a very short copyright period for menus) are\r                           \n\nnot options  at all for courts but might be for Congress.  In\n\nall  events, the  choices are  important ones of  policy, not\n\nlinguistics,  and they  should  be made  with the  underlying\n\nconsiderations in view.\n\n                             -39-\r                                         -39-\r\r\n",
  "html": "",
  "html_lawbox": "",
  "html_columbia": "",
  "xml_harvard": "",
  "html_with_citations": "<pre class=\"inline\">\n\nApril 19, 1995\n                United States Court of Appeals\r                            United States Court of Appeals\n                    For the First Circuit\r                                For the First Circuit\n                                         \n\nNo. 93-2214\n\n                LOTUS DEVELOPMENT CORPORATION,\n\n                     Plaintiff, Appellee,\n\n                              v.\n\n                 BORLAND INTERNATIONAL, INC.,\n\n                    Defendant, Appellant.\n\n                                         \n\n                         ERRATA SHEET\r                                     ERRATA SHEET\n\nThe opinion of this  court issued on March  9, 1995, is amended as\n\nfollows:\n\nOn page 38,  line 16:   Change \"See  </pre><span class=\"citation no-link\"><span class=\"id_token\">id.</span> at 562.\" </span><pre class=\"inline\"> to \"See </pre><span class=\"citation no-link\"><span class=\"id_token\">id.</span>  at\r                                                                          \n\n562. </span><pre class=\"inline\"> But  see Campbell v.  Acuff-Rose Music, Inc.,  </pre><span class=\"citation\" data-id=\"112936\"><a href=\"/opinion/112936/campbell-v-acuff-rose-music-inc/\"><span class=\"volume\">114</span> <span class=\"reporter\">S. Ct.</span>  <span class=\"page\">1164</span></a></span><pre class=\"inline\">,\r                                                          \n\n1174 (1994).\"\r\r\n\n                United States Court of Appeals\r                            United States Court of Appeals\n\n                    For the First Circuit\r                                For the First Circuit\n\n                                         \n\nNo. 93-2214\n\n                LOTUS DEVELOPMENT CORPORATION,\n\n                     Plaintiff, Appellee,\n\n                              v.\n\n                 BORLAND INTERNATIONAL, INC.,\n\n                    Defendant, Appellant.\n\n                                         \n\n         APPEAL FROM THE UNITED STATES DISTRICT COURT\n\n              FOR THE DISTRICT OF MASSACHUSETTS\n\n         [Hon. Robert E. Keeton, U.S. District Judge]\r                                                                \n\n                                         \r\r\n\n                            Before\n\n                    Torruella, Chief Judge,\r                                                      \n\n              Boudin and Stahl, Circuit Judges.\r                                                          \n\n                                         \n\nGary  L.  Reback,  with whom  Peter  N.  Detkin, Michael  Barclay,\r                                                                             \n\nIsabella  E. Fu, Wilson Sonsini  Goodrich &amp; Rosati,  Peter E. Gelhaar,\r                                                                             \n\nKatherine  L. Parks, and Donnelly Conroy  &amp; Gelhaar, were on brief for\r                                                           \n\nappellant.\n\nMatthew P. Poppel, et. al, were  on brief for Computer Scientists,\r                             \n\namicus curiae.\n\nDennis S. Karjala and Peter S. Menell on brief, amici curiae.\r                                                 \n\nJeffrey  C. Cannon and Baker  Keaton Seibel &amp; Cannon were on brief\r                                                                \n\nfor Computer Software Industry Association, amicus curiae.\n\nLaureen E.  McGurk, David A. Rabin,  Bryan G.  Harrison and Morris\r                                                                              \n\nManning  &amp; Martin were on  brief for Chicago  Computer Society, Diablo\r                         \n\nUsers  Group,  Danbury  Area Computer  Society,  IBM  AB Users  Group,\n\nKentucky-Indiana Personal  Computer Users Group, Long  Island PC Users\n\nGroup, Napa Valley PC  Users Group, Pacific Northwest PC  Users Group,\n\nPalmetto Personal Computer  Club, Philadelphia Area  Computer Society,\n\nInc., Phoenix  IBM PC Users Group,  Pinellas IBM PC Users  Group, Quad\n\nCities Computer Society, Quattro Pro Users Group, Sacramento  PC Users\n\nGroup, San Francisco  PC Users  Group, Santa Barbara  PC Users  Group,\n\nTwin Cities  PC  Users Group,  and  Warner Robbins  Personal  Computer\r\r\n\nAssociation, amici curiae.\n\nDiane  Marie O'Malley  and Hanson  Bridgett  Marcus Vlahos  &amp; Rudy\r                                                                              \n\nwere on brief for Software Entrepreneurs' Forum, amicus curiae.\n\nPeter  M.C.  Choy  was   on  brief  for   American  Committee  for\r                             \n\nInteroperable Systems, amicus curiae.\n\nHoward B. Abrams, Howard C. Anawalt,  Stephen R. Barnett, Ralph S.\r                                                                              \n\nBrown, Stephen L. Carter, Amy B. Cohen, Paul J. Heald, Peter A. Jaszi,\r                                                                             \n\nJohn  A. Kidwell, Edmund W.  Kitch, Roberta R.  Kwall, David L. Lange,\r                                                                             \n\nMarshall  Leaffer,  Jessica  D. Litman,  Charles  R.  McManis,  L. Ray\r                                                                              \n\nPatterson, Jerome H. Reichman, David A.  Rice, Pamela Samuelson, David\r                                                                              \n\nJ. Seipp,  David E. Shipley, Lionel S. Sobel, Alfred C. Yen, and Diane\r                                                                              \n\nL.  Zimmerman  were on  brief  for  Copyright Law  Professors,  amicus\r                     \n\ncuriae.\n\nHenry  B. Gutman, with  whom Kerry  L. Konrad,  Joshua H. Epstein,\r                                                                             \n\nKimberly A. Caldwell, O'Sullivan Graev &amp; Karabell, Thomas  M. Lemberg,\r                                                                             \n\nJames C. Burling, and Hale and Dorr, were on brief for appellee.\r                                           \n\nMorton David  Goldberg, June M. Besek,  David O.  Carson, Jesse M.\r                                                                              \n\nFeder,  Schwab Goldberg Price  &amp; Dannay, and Arthur  R. Miller were on\r                                                                      \n\nbrief  for  Apple  Computer,  Inc.,   Digital  Equipment  Corporation,\n\nInternational  Business Machines  Corporation, and  Xerox Corporation,\n\namici curiae.\n\nJon A. Baumgarten, Proskauer  Rose Goetz &amp;  Mendelsohn, and Robert\r                                                                              \n\nA. Gorman were on brief for Adobe Systems, Inc., Apple Computer, Inc.,\r                 \n\nComputer   Associates   International,    Inc.,   Digital    Equipment\n\nCorporation,  and International  Business Machines  Corporation, amici\n\ncuriae.\r\r\n\nHerbert  F. Schwartz, Vincent  N. Palladino, Susan Progoff, Fish &amp;\r                                                                              \n\nNeave, William J. Cheeseman, and Foley Hoag &amp; Eliot, were on brief for\r                                                           \n\nComputer  and  Business  Equipment Manufacturers  Association,  amicus\n\ncuriae.\n\n                                         \n\n                        March 9, 1995\n\n                                         \r\r\n\n          STAHL, Circuit  Judge.  This appeal  requires us to\r                      STAHL, Circuit  Judge.\r                                           \n\ndecide   whether  a  computer   menu  command   hierarchy  is\n\ncopyrightable subject matter.   In particular, we must decide\n\nwhether, as the district court held, plaintiff-appellee Lotus\n\nDevelopment   Corporation's  copyright  in   Lotus  1-2-3,  a\n\ncomputer  spreadsheet program,  was  infringed by  defendant-\n\nappellant  Borland International,  Inc., when  Borland copied\n\nthe Lotus 1-2-3 menu command  hierarchy into its Quattro  and\n\nQuattro Pro  computer spreadsheet  programs.  See  Lotus Dev.\r                                                                         \n\nCorp. v. Borland Int'l, Inc., </pre><span class=\"citation\" data-id=\"1599920\"><a href=\"/opinion/1599920/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">788</span> <span class=\"reporter\">F. Supp.</span> <span class=\"page\">78</span> </a></span><pre class=\"inline\">(D. Mass. 1992)\r                                        \n\n(\"Borland I\"); Lotus  Dev. Corp. v. Borland Int'l,  Inc., </pre><span class=\"citation\" data-id=\"1379188\"><a href=\"/opinion/1379188/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">799</span>\r                                                                    \n\n<span class=\"reporter\">F. Supp.</span> <span class=\"page\">203</span> </a></span><pre class=\"inline\">(D. Mass. 1992) (\"Borland II\"); Lotus Dev. Corp.\r                                                                         \n\nv.  Borland Int'l,  Inc., </pre><span class=\"citation\" data-id=\"1802132\"><a href=\"/opinion/1802132/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">831</span>  <span class=\"reporter\">F. Supp.</span>  <span class=\"page\">202</span> </a></span><pre class=\"inline\">(D.  Mass. 1993)\r                                    \n\n(\"Borland III\"); Lotus Dev. Corp. v. Borland Int'l, Inc., </pre><span class=\"citation\" data-id=\"1801801\"><a href=\"/opinion/1801801/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">831</span>\r                                                                    \n\n<span class=\"reporter\">F. Supp.</span> <span class=\"page\">223</span> </a></span><pre class=\"inline\">(D. Mass. 1993) (\"Borland IV\").\r                                                     \n\n                              I.\r                                          I.\r                                            \n\n                          Background\r                                      Background\r                                                \n\n          Lotus 1-2-3 is  a spreadsheet program  that enables\n\nusers  to perform  accounting functions  electronically  on a\n\ncomputer.   Users manipulate  and control the  program via  a\n\nseries of menu commands, such as \"Copy,\" \"Print,\" and \"Quit.\"\n\nUsers  choose commands  either  by highlighting  them on  the\n\nscreen or by typing their first letter.  In  all, Lotus 1-2-3\n\n                             -3-\r                                          3\r\r\n\nhas  469  commands  arranged  into  more than  50  menus  and\n\nsubmenus.\n\n          Lotus  1-2-3, like  many computer  programs, allows\n\nusers to write what are called \"macros.\"  By writing a macro,\n\na  user  can designate  a series  of  command choices  with a\n\nsingle  macro keystroke.    Then, to  execute that  series of\n\ncommands in  multiple parts  of the spreadsheet,  rather than\n\ntyping the whole  series each  time, the user  only needs  to\n\ntype  the single pre-programmed  macro keystroke, causing the\n\nprogram  to  recall  and  perform the  designated  series  of\n\ncommands automatically.  Thus, Lotus 1-2-3 macros shorten the\n\ntime needed to set up and operate the program.\n\n          Borland released  its first Quattro program  to the\n\npublic in  1987, after  Borland's engineers had  labored over\n\nits development for nearly  three years.  Borland's objective\n\nwas to develop a spreadsheet program far superior to existing\n\nprograms, including Lotus 1-2-3.  In Borland's words, \"[f]rom\n\nthe  time of  its  initial release  .  . .  Quattro  included\n\nenormous innovations over competing spreadsheet products.\"\n\n          The district court found,  and Borland does not now\n\ncontest, that Borland included in its Quattro and Quattro Pro\n\nversion  1.0  programs \"a  virtually  identical  copy of  the\r                                                           \n\nentire 1-2-3  menu tree.\"   Borland III, 831 F.  Supp. at 212\r                                                   \n\n(emphasis  in original).  In  so doing, Borland  did not copy\n\nany  of Lotus's underlying computer  code; it copied only the\n\n                             -4-\r                                          4\r\r\n\nwords  and  structure  of  Lotus's  menu  command  hierarchy.\n\nBorland  included the  Lotus  menu command  hierarchy in  its\n\nprograms to  make them  compatible with  Lotus 1-2-3  so that\n\nspreadsheet users who were  already familiar with Lotus 1-2-3\n\nwould  be able  to  switch to  the  Borland programs  without\n\nhaving to learn new commands or rewrite their Lotus macros.\n\n          In  its   Quattro  and  Quattro  Pro   version  1.0\n\nprograms, Borland achieved compatibility with  Lotus 1-2-3 by\n\noffering its  users an  alternate user interface,  the \"Lotus\n\nEmulation Interface.\"  By activating the Emulation Interface,\n\nBorland  users would  see the  Lotus  menu commands  on their\n\nscreens  and could interact with Quattro or Quattro Pro as if\n\nusing Lotus  1-2-3, albeit with a  slightly different looking\n\nscreen and with  many Borland options not  available on Lotus\n\n1-2-3.  In effect,  Borland allowed users to choose  how they\n\nwanted  to communicate  with Borland's  spreadsheet programs:\n\neither by  using  menu commands  designed by  Borland, or  by\n\nusing the  commands and command structure used in Lotus 1-2-3\n\naugmented by Borland-added commands.\n\n          Lotus  filed this  action  against  Borland in  the\n\nDistrict  of Massachusetts on July 2, 1990, four days after a\n\ndistrict  court held  that the  Lotus 1-2-3  \"menu structure,\n\ntaken as a  whole --  including the choice  of command  terms\n\n[and] the structure and order of those terms,\"  was protected\n\nexpression covered  by Lotus's copyrights.   Lotus Dev. Corp.\r                                                                         \n\n                             -5-\r                                          5\r\r\n\nv.  Paperback Software  Int'l, </pre><span class=\"citation\" data-id=\"1952439\"><a href=\"/opinion/1952439/lotus-dev-corp-v-paperback-software-intern/\"><span class=\"volume\">740</span>  <span class=\"reporter\">F. Supp.</span>  <span class=\"page\">37</span></a></span><pre class=\"inline\">, 68,  70 (D.\r                                         \n\nMass.  1990)  (\"Paperback\").1   Three  days  earlier, on  the\r                                     \n\nmorning  after the  Paperback decision,  Borland had  filed a\r                                         \n\ndeclaratory judgment  action against  Lotus  in the  Northern\n\nDistrict  of   California,  seeking  a  declaration  of  non-\n\ninfringement.   On September 10, 1990,  the district court in\n\nCalifornia dismissed Borland's declaratory judgment action in\n\nfavor of this action.\n\n          Lotus  and Borland filed  cross motions for summary\n\njudgment; the district court denied both motions on March 20,\n\n1992, concluding that \"neither party's motion is supported by\n\nthe record.\"   Borland </pre><span class=\"citation\" data-id=\"1599920\"><span class=\"antecedent_guess\">I,</span> <a href=\"/opinion/1599920/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">788</span>  <span class=\"reporter\">F. Supp.</span> at <span class=\"page\">80</span></a></span><pre class=\"inline\">.   The district\r                                    \n\ncourt invited  the parties  to file renewed  summary judgment\n\nmotions that would \"focus  their arguments more precisely\" in\n\nlight of rulings it  had made in conjunction with  its denial\n\nof their summary  judgment motions.  </pre><span class=\"citation\" data-id=\"1599920\"><a href=\"/opinion/1599920/lotus-development-corp-v-borland-intern-inc/\"><span class=\"id_token\">Id.</span> at 82. </a></span><pre class=\"inline\"> Both parties\r                                                    \n\nfiled renewed motions for summary judgment on April 24, 1992.\n\nIn its motion, Borland  contended that the Lotus 1-2-3  menus\n\nwere  not  copyrightable  as a  matter  of  law  and that  no\n\nreasonable  trier  of fact  could  find  that the  similarity\n\nbetween  its  products  and  Lotus 1-2-3  was  sufficient  to\n\nsustain a determination of  infringement.  Lotus contended in\n\n                    \r                                \n\n1.  Judge Keeton presided over both the Paperback  litigation\r                                                             \nand this case.\n\n                             -6-\r                                          6\r\r\n\nits motion that Borland had copied  Lotus 1-2-3's entire user\n\ninterface and had thereby infringed Lotus's copyrights.\n\n          On  July  31,  1992,  the  district  court   denied\n\nBorland's  motion and  granted Lotus's motion  in part.   The\n\ndistrict court  ruled that  the Lotus menu  command hierarchy\n\nwas copyrightable expression because\n\n          [a]  very  satisfactory spreadsheet  menu\n          tree can be  constructed using  different\n          commands   and    a   different   command\n          structure from  those of Lotus 1-2-3.  In\n          fact, Borland has  constructed just  such\n          an  alternate  tree  for  use  in Quattro\n          Pro's native mode.  Even if one holds the\n          arrangement of menu commands constant, it\n          is   possible   to   generate   literally\n          millions  of  satisfactory menu  trees by\n          varying the menu commands employed.  \n\nBorland  II, 799  F.  Supp.  at  217.    The  district  court\r                       \n\ndemonstrated this by offering alternate command words for the\n\nten  commands that  appear in Lotus's  main menu.   </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span>   For\r                                                                   \n\nexample, </span><pre class=\"inline\">the district court stated that \"[t]he `Quit' command\n\ncould be  named `Exit' without any  other modifications,\" and\n\nthat \"[t]he `Copy' command  could be called `Clone,' `Ditto,'\n\n`Duplicate,'    `Imitate,'    `Mimic,'    `Replicate,'    and\n\n`Reproduce,'  among others.\"  </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span>  Because so </span><pre class=\"inline\">many variations\r                                             \n\nwere possible,  the district  court concluded that  the Lotus\n\ndevelopers'   choice  and   arrangement  of   command  terms,\n\nreflected  in the Lotus  menu command  hierarchy, constituted\n\ncopyrightable expression.\n\n                             -7-\r                                          7\r\r\n\n          In granting partial summary judgment  to Lotus, the\n\ndistrict  court  held  that  Borland  had  infringed  Lotus's\n\ncopyright in Lotus 1-2-3:\n\n          [A]s a matter  of law, Borland's  Quattro\n          products   infringe   the   Lotus   1-2-3\n          copyright  because of  (1) the  extent of\n          copying  of the \"menu commands\" and \"menu\n          structure\" that is not genuinely disputed\r                                                      \n          in this case, (2) the extent to which the\n          copied  elements  of the  \"menu commands\"\n          and  \"menu structure\"  contain expressive\n          aspects separable from  the functions  of\n          the \"menu commands\" and \"menu structure,\"\n          and  (3)   the  scope  of   those  copied\n          expressive aspects as an integral part of\n          Lotus 1-2-3.\n\nBorland </pre><span class=\"citation\" data-id=\"1379188\"><span class=\"antecedent_guess\">II,</span> <a href=\"/opinion/1379188/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">799</span> <span class=\"reporter\">F. Supp.</span> at  <span class=\"page\">223</span> </a></span><pre class=\"inline\">(emphasis in original).  The\r                      \n\ncourt  nevertheless concluded  that  while  the  Quattro  and\n\nQuattro Pro programs infringed Lotus's copyright, Borland had\n\nnot copied  the entire Lotus  1-2-3 user interface,  as Lotus\n\nhad contended.  Accordingly, the court concluded that  a jury\n\ntrial  was  necessary to  determine  the  scope of  Borland's\n\ninfringement,  including  whether  Borland  copied  the  long\n\nprompts2 of  Lotus 1-2-3, whether the  long prompts contained\n\n                    \r                                \n\n2.  Lotus 1-2-3 utilizes a two-line menu;  the top line lists\nthe commands from which  the user may choose, and  the bottom\nline  displays what Lotus calls its \"long prompts.\"  The long\nprompts  explain,  as   a  sort  of  \"help  text,\"  what  the\nhighlighted menu  command will do  if entered.   For example,\nthe  long prompt  for  the \"Worksheet\"  command displays  the\nsubmenu  that  the \"Worksheet\"  command  calls  up; it  reads\n\"Global,  Insert,  Delete,  Column,  Erase,  Titles,  Window,\nStatus,  Page.\"   The  long  prompt  for the  \"Copy\"  command\nexplains  what  function  the  \"Copy\"  command will  perform:\n\"Copy a  cell or range  of cells.\"   The long prompt  for the\n\"Quit\" command reads, \"End 1-2-3 session (Have you saved your\nwork?).\"\n\n                             -8-\r                                          8\r\r\n\nexpressive elements,  and to what extent,  if any, functional\n\nconstraints  limited the  number  of possible  ways that  the\n\nLotus menu command hierarchy could  have been arranged at the\n\ntime of its creation.  See Borland III, 831 F.  Supp. at 207.\r                                                  \n\nAdditionally,  the  district  court  granted   Lotus  summary\n\njudgment on Borland's affirmative  defense of waiver, but not\n\non its affirmative  defenses of laches and estoppel.  Borland\r                                                                         \n\n</pre><span class=\"citation\" data-id=\"1379188\"><span class=\"antecedent_guess\">II,</span> <a href=\"/opinion/1379188/lotus-development-corp-v-borland-intern-inc/\"><span class=\"volume\">799</span> <span class=\"reporter\">F. Supp.</span> at <span class=\"page\">222-23</span></a></span><pre class=\"inline\">.\r              \n\n          Immediately following the district  court's summary\n\njudgment   decision,  Borland  removed  the  Lotus  Emulation\n\nInterface  from   its   products.     Thereafter,   Borland's\n\nspreadsheet  programs  no  longer displayed  the  Lotus 1-2-3\n\nmenus to Borland users,  and as a result Borland  users could\n\nno longer communicate with Borland's programs as if they were\n\nusing   a   more  sophisticated   version  of   Lotus  1-2-3.\n\nNonetheless,  Borland's  programs continued  to  be partially\n\ncompatible  with Lotus  1-2-3, for  Borland retained  what it\n\ncalled  the \"Key Reader\" in  its Quattro Pro  programs.  Once\n\nturned  on,  the Key  Reader  allowed  Borland's programs  to\n\n                    \r                                \n\n          Prior to  trial, the parties agreed  to exclude the\ncopying of the long  prompts from the case; Lotus  agreed not\nto contend that Borland had  copied the long prompts, Borland\nagreed not to argue that it had not  copied the long prompts,\nand both sides agreed not to argue that the issue  of whether\nBorland had copied the long prompts was material to any other\nissue in the case.  See Borland </pre><span class=\"citation no-link\"><span class=\"antecedent_guess\">III,</span> <span class=\"volume\">831</span> <span class=\"reporter\">F. Supp.</span> at <span class=\"page\">208</span></span><pre class=\"inline\">.\r                                               \n\n                             -9-\r                                          9\r\r\n\nunderstand and perform  some Lotus 1-2-3  macros.3  With  the\n\nKey  Reader on, the  Borland programs used  Quattro Pro menus\n\nfor display,  interaction, and macro  execution, except  when\n\nthey encountered a slash  (\"/\") key in a macro  (the starting\n\nkey  for  any   Lotus  1-2-3  macro),  in   which  case  they\n\ninterpreted the macro as having been written for Lotus 1-2-3.\n\nAccordingly, people who wrote  or purchased macros to shorten\n\nthe  time needed to perform an operation in Lotus 1-2-3 could\n\nstill use  those macros in Borland's programs.4  The district\n\ncourt  permitted  Lotus  to  file  a  supplemental  complaint\n\nalleging that the Key Reader infringed its copyright.  \n\n          The parties agreed to  try the remaining  liability\n\nissues without a jury.   The district court held  two trials,\n\nthe Phase I trial covering all remaining issues raised in the\n\noriginal complaint (relating to the  Emulation Interface) and\n\nthe  Phase  II  trial  covering  all  issues  raised  in  the\n\nsupplemental complaint (relating to the Key Reader).   At the\n\nPhase  I  trial,  there  were  no  live  witnesses,  although\n\nconsiderable  testimony   was  presented   in  the  form   of\n\naffidavits and deposition excerpts.  The district court ruled\n\nupon evidentiary objections counsel interposed.  At the Phase\n\n                    \r                                \n\n3.  Because  Borland's programs  could no longer  display the\nLotus menu command hierarchy to users, the Key Reader did not\nallow debugging or modification of  macros, nor did it permit\nthe execution of most interactive macros.  \n\n4.  See  Borland </pre><span class=\"citation no-link\"><span class=\"antecedent_guess\">IV,</span>  <span class=\"volume\">831</span>  <span class=\"reporter\">F. Supp.</span>  at  <span class=\"page\">226-27</span></span><pre class=\"inline\">, for  a  more\r                               \ndetailed explanation of macros and the Key Reader.\n\n                             -10-\r                                          10\r\r\n\nII  trial,  there  were  two  live witnesses,  each  of  whom\n\ndemonstrated the programs for the district court.\n\n          After the close of the  Phase I trial, the district\n\ncourt permitted Borland  to amend its  answer to include  the\n\naffirmative  defense  of \"fair  use.\"    Because Borland  had\n\npresented all of the evidence supporting its fair-use defense\n\nduring the Phase  I trial,  but Lotus had  not presented  any\n\nevidence  on fair  use (as  the defense  had not  been raised\n\nbefore  the conclusion  of the  Phase I trial),  the district\n\ncourt  considered  Lotus's  motion  for  judgment  on partial\n\nfindings of fact.  See  Fed. R. Civ. P. 52(c).   The district\r                                  \n\ncourt held  that Borland had  failed to show that  its use of\n\nthe  Lotus  1-2-3 menu  command  hierarchy  in its  Emulation\n\nInterface was a fair use.   See Borland III, 831 F.  Supp. at\r                                                       \n\n208.\n\n          In  its Phase I-trial  decision, the district court\n\nfound that \"each of the Borland emulation interfaces contains\n\na  virtually identical copy of  the 1-2-3 menu  tree and that\n\nthe  1-2-3  menu  tree  is  capable  of  a  wide  variety  of\n\nexpression.\"  Borland </pre><span class=\"citation no-link\"><span class=\"antecedent_guess\">III,</span> <span class=\"volume\">831</span> <span class=\"reporter\">F. Supp.</span> at <span class=\"page\">218</span></span><pre class=\"inline\">.  The district\r                                     \n\ncourt also rejected Borland's  affirmative defenses of laches\n\nand estoppel.  </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span> at 218-23.\r</span><pre class=\"inline\">                              \n\n          In its Phase II-trial decision, the  district court\n\nfound that  Borland's Key  Reader file included  \"a virtually\n\nidentical  copy  of  the   Lotus  menu  tree  structure,  but\n\n                             -11-\r                                          11\r\r\n\nrepresented in a  different form  and with  first letters  of\n\nmenu  command names in place of the full menu command names.\"\n\nBorland </pre><span class=\"citation no-link\"><span class=\"antecedent_guess\">IV,</span> <span class=\"volume\">831</span>  <span class=\"reporter\">F. Supp.</span> at <span class=\"page\">228</span></span><pre class=\"inline\">.  In  other words, Borland's\r                      \n\nprograms no longer included the Lotus command terms, but only\n\ntheir first letters.  The district court held that \"the Lotus\n\nmenu  structure,  organization,  and  first  letters  of  the\n\ncommand names  .  .  . constitute  part  of  the  protectable\n\nexpression   found  in   [Lotus   1-2-3].\"     </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span>  at   233.\r</span><pre class=\"inline\">                                                              \n\nAccordingly,  the  district  court  held that  with  its  Key\n\nReader, Borland had infringed Lotus's copyright.  </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span> at 245.\r</span><pre class=\"inline\">                                                                 \n\nThe  district  court  also  rejected   Borland's  affirmative\n\ndefenses of waiver, laches,  estoppel, and fair use.   </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span> at\r                                                                      \n\n235-45. </span><pre class=\"inline\">   The  district   court  then  entered  a  permanent\n\ninjunction against  Borland, </pre><span class=\"citation no-link\"><span class=\"id_token\">id.</span>  at 245, </span><pre class=\"inline\">from  which Borland\r                                            \n\nappeals.\n\n          This appeal concerns only Borland's copying  of the\n\nLotus menu  command hierarchy  into its Quattro  programs and\n\nBorland's affirmative  defenses to  such copying.   Lotus has\n\nnot cross-appealed; in other words, Lotus does not contend on\n\nappeal  that the district court erred in finding that Borland\n\nhad not copied  other elements  of Lotus 1-2-3,  such as  its\n\nscreen displays.\n\n                             II.\r                                         II.\r                                            \n\n                          Discussion\r                                      Discussion\r                                                \n\n                             -12-\r                                          12\r\r\n\n          On  appeal,  Borland  does  not   dispute  that  it\n\nfactually  copied the words and arrangement of the Lotus menu\n\ncommand hierarchy.  Rather,  Borland argues that it \"lawfully\n\ncopied  the unprotectable  menus  of Lotus  1-2-3.\"   Borland\n\ncontends  that  the  Lotus  menu  command  hierarchy  is  not\n\ncopyrightable because  it is  a system, method  of operation,\n\nprocess, or procedure foreclosed from protection by 17 U.S.C.\n\n   102(b).    Borland  also raises  a  number  of affirmative\n\ndefenses.\n\n                             -13-\r                                          13\r\r\n\nA.  Copyright Infringement Generally\r                                                \n\n          To  establish  copyright infringement,  a plaintiff\n\nmust  prove \"(1)  ownership  of a  valid  copyright, and  (2)\n\ncopying  of  constituent  elements   of  the  work  that  are\n\noriginal.\"  Feist Publications, Inc. v. Rural Tel. Serv. Co.,\r                                                                        \n\n</pre><span class=\"citation\" data-id=\"112568\"><a href=\"/opinion/112568/feist-publications-inc-v-rural-telephone-service-co/\"><span class=\"volume\">499</span> <span class=\"reporter\">U.S.</span> <span class=\"page\">340</span></a></span><pre class=\"inline\">, 361 (1991); see also Data Gen. Corp. v. Grumman\r                                                                         \n\nSys.  Support Corp., </pre><span class=\"citation\" data-id=\"195601\"><a href=\"/opinion/195601/data-general-v-grumman-systems/\"><span class=\"volume\">36</span> <span class=\"reporter\">F.3d</span> <span class=\"page\">1147</span></a></span><pre class=\"inline\">, 1160 n.19 (1st Cir. 1994);\r                               \n\nConcrete Mach. Co. v. Classic Lawn Ornaments,  Inc., </pre><span class=\"citation\" data-id=\"503998\"><a href=\"/opinion/503998/concrete-machinery-company-inc-v-classic-lawn-ornaments-inc/\"><span class=\"volume\">843</span> <span class=\"reporter\">F.2d</span>\r                                                               \n\n<span class=\"page\">600</span></a></span><pre class=\"inline\">, 605  (1st  Cir. 1988).   To  show ownership  of a  valid\n\ncopyright  and  therefore  satisfy  Feist's  first  prong,  a\r                                                     \n\nplaintiff must prove that the work as a whole is original and\n\nthat  the   plaintiff  complied  with   applicable  statutory\n\nformalities.   See Engineering  Dynamics, Inc.  v. Structural\r                                                                         \n\nSoftware,  Inc., </pre><span class=\"citation\" data-id=\"672323\"><a href=\"/opinion/672323/engineering-dynamics-inc-plaintiff-appellant-cross-appellee-v/\"><span class=\"volume\">26</span>  <span class=\"reporter\">F.3d</span> <span class=\"page\">1335</span></a></span><pre class=\"inline\">,  1340 (5th  Cir. 1994).   \"In\r                           \n\njudicial proceedings, a certificate of copyright registration\n\nconstitutes  prima facie  evidence  of  copyrightability  and\r                                    \n\nshifts  the burden to  the defendant  to demonstrate  why the\n\ncopyright is not valid.\"  Bibbero Sys., Inc. v. Colwell Sys.,\r                                                                         \n\nInc., </pre><span class=\"citation\" data-id=\"534883\"><a href=\"/opinion/534883/bibbero-systems-inc-a-california-corporation/\"><span class=\"volume\">893</span> <span class=\"reporter\">F.2d</span> <span class=\"page\">1104</span></a></span><pre class=\"inline\">, 1106 (9th Cir. 1990); see also 17 U.S.C.\r                                                               \n\n   410(c); Folio  Impressions, Inc.  v. Byer  California, </pre><span class=\"citation\" data-id=\"564319\"><a href=\"/opinion/564319/folio-impressions-inc-v-byer-california-macy-new-york-inc-lida/\"><span class=\"volume\">937</span>\r                                                                    \n\n<span class=\"reporter\">F.2d</span>  <span class=\"page\">759</span></a></span><pre class=\"inline\">, 763 (2d Cir. 1991) (presumption of validity may be\n\nrebutted).\n\n          To  show actionable  copying and  therefore satisfy\n\nFeist's  second prong, a plaintiff must  first prove that the\r                 \n\nalleged  infringer copied  plaintiff's copyrighted work  as a\n\n                             -14-\r                                          14\r\r\n\nfactual  matter; to  do this,  he or  she may  either present\n\ndirect   evidence  of   factual  copying   or,  if   that  is\n\nunavailable, evidence  that the alleged  infringer had access\n\nto  the   copyrighted  work   and  that  the   offending  and\n\ncopyrighted works  are so  similar that  the court  may infer\n\nthat there was factual  copying (i.e., probative similarity).\n\nEngineering  </pre><span class=\"citation\" data-id=\"672323\"><span class=\"antecedent_guess\">Dynamics,</span> <a href=\"/opinion/672323/engineering-dynamics-inc-plaintiff-appellant-cross-appellee-v/\"><span class=\"volume\">26</span>  <span class=\"reporter\">F.3d</span>  at <span class=\"page\">1340</span></a></span><pre class=\"inline\">;  see also  Concrete\r                                                                         \n\n</pre><span class=\"citation\" data-id=\"503998\"><span class=\"antecedent_guess\">Mach.,</span>  <a href=\"/opinion/503998/concrete-machinery-company-inc-v-classic-lawn-ornaments-inc/\"><span class=\"volume\">843</span> <span class=\"reporter\">F.2d</span> at <span class=\"page\">606</span></a></span><pre class=\"inline\">.  The  plaintiff must then prove that\r                 \n\nthe copying  of copyrighted material was so extensive that it\n\nrendered  the offending  and copyrighted  works substantially\n\nsimilar.  See Engineering </pre><span class=\"citation\" data-id=\"672323\"><span class=\"antecedent_guess\">Dynamics,</span> <a href=\"/opinion/672323/engineering-dynamics-inc-plaintiff-appellant-cross-appellee-v/\"><span class=\"volume\">26</span> <span class=\"reporter\">F.3d</span> at <span class=\"page\">1341</span></a></span><pre class=\"inline\">.\r                                              \n\n          In this appeal, we are  faced only with whether the\n\nLotus menu command hierarchy  is copyrightable subject matter\n\nin  the first instance, for Borland concedes that Lotus has a\n\nvalid  copyright in  Lotus 1-2-3  as a  whole5 and  admits to\n\nfactually copying  the Lotus  menu command  hierarchy.  As  a\n\nresult,  this appeal is in a very different posture from most\n\n                    \r                                \n\n5.  Computer   programs   receive  copyright   protection  as\n\"literary  works.\"    See  17 U.S.C.     102(a)(1)  (granting\r                                     \nprotection to \"literary works\") and 17 U.S.C.   101 (defining\r                                               \n\"literary works\" as \"works . . . expressed in words, numbers,\nor other  verbal or numerical symbols  or indicia, regardless\nof  the  nature  of  the material  objects,  such  as  books,\nperiodicals, phonorecords,  film, tapes, disks, or  cards, in\r                                                          \nwhich  they are  embodied\" (emphasis  added)); see  also H.R.\r                                                                    \nRep. No. 1476, 94th  Cong., 2d Sess. 54 (1976),  reprinted in\r                                                                         \n1976 U.S.C.C.A.N. 5659, 5667 (\"The  term `literary works' . .\n. includes computer data bases, and  computer programs to the\nextent that  they incorporate authorship in  the programmer's\nexpression of original ideas, as distinguished from the ideas\nthemselves.\").\n\n                             -15-\r                                          15\r\r\n\ncopyright-infringement  cases,   for  copyright  infringement\n\ngenerally turns on whether the defendant has copied protected\n\nexpression as  a factual matter.   Because of  this different\n\nposture,  most  copyright-infringement  cases   provide  only\n\nlimited help  to us  in deciding this  appeal.  This  is true\n\neven with respect to  those copyright-infringement cases that\n\ndeal with computers and computer software.\n\nB.  Matter of First Impression\r                                          \n\n          Whether   a   computer   menu   command   hierarchy\n\nconstitutes copyrightable subject matter is a matter of first\n\nimpression  in this court.  While some other courts appear to\n\nhave touched  on it briefly  in dicta, see,  e.g., Autoskill,\r                                                                         \n\nInc.  v. National  Educ. Support Sys.,  Inc., </pre><span class=\"citation\" data-id=\"608143\"><a href=\"/opinion/608143/autoskill-inc-a-canadian-corporation-v-national-educational-support/\"><span class=\"volume\">994</span>  <span class=\"reporter\">F.2d</span> <span class=\"page\">1476</span></a></span><pre class=\"inline\">,\r                                                        \n\n1495 n.23 (10th Cir.),  cert. denied, </pre><span class=\"citation no-link\"><span class=\"volume\">114</span> <span class=\"reporter\">S. Ct.</span>  <span class=\"page\">307</span> </span><pre class=\"inline\">(1993),\r                                                \n\nwe know of no cases that deal with the copyrightability  of a\n\nmenu  command hierarchy  standing on  its own  (i.e., without\n\nother  elements  of  the   user  interface,  such  as  screen\n\ndisplays,  in issue).   Thus  we are navigating  in uncharted\n\nwaters.\n\n          Borland  vigorously  argues,   however,  that   the\n\nSupreme Court charted our course more than 100 years ago when\n\nit decided Baker v. Selden, </pre><span class=\"citation no-link\"><span class=\"volume\">101</span> <span class=\"reporter\">U.S.</span> <span class=\"page\">99</span> </span><pre class=\"inline\">(1879).   In Baker v.\r                                                                      \n\nSelden,  the  Court held  that  Selden's  copyright over  the\r                  \n\ntextbook in which he  explained his new way to  do accounting\n\n                             -16-\r                                          16\r\r\n\ndid not  grant him a  monopoly on the  use of  his accounting\n\nsystem.6  Borland argues:  \n\n          The facts  of Baker v.  Selden, and  even\r                                                    \n          the arguments advanced by the  parties in\n          that case, are identical to those in this\n          case.  The  only difference  is that  the\n          \"user interface\" of  Selden's system  was\n          implemented  by pen and paper rather than\n          by computer.\n\nTo  demonstrate that  Baker v.  Selden and  this  appeal both\r                                                  \n\ninvolve accounting systems, Borland even  supplied this court\n\nwith a video that, with special effects, shows Selden's paper\n\nforms \"melting\" into a  computer screen and transforming into\n\nLotus 1-2-3.\n\n          We do not think  that Baker v. Selden is  nearly as\r                                                           \n\nanalogous to this appeal as Borland claims.  Of course, Lotus\n\n1-2-3  is a  computer spreadsheet,  and as  such its  grid of\n\nhorizontal rows and  vertical columns certainly resembles  an\n\naccounting  ledger or  any  other paper  spreadsheet.   Those\n\ngrids, however, are not  at issue in this appeal  for, unlike\n\nSelden,  Lotus does  not claim  to have  a monopoly  over its\n\naccounting  system.    Rather, this  appeal  involves Lotus's\n\nmonopoly over the  commands it uses to operate  the computer.\n\nAccordingly,  this  appeal  is   not,  as  Borland  contends,\n\n\"identical\" to Baker v. Selden.\r                                          \n\nC.  Altai\r                     \n\n                    \r                                \n\n6.  Selden's system  of double-entry bookkeeping  is the  now\nalmost-universal T-accounts system.\n\n                             -17-\r                                          17\r\r\n\n          Before we analyze  whether the  Lotus menu  command\n\nhierarchy  is  a system,  method  of  operation, process,  or\n\nprocedure, we  first consider  the applicability of  the test\n\nthe Second  Circuit set forth in Computer  Assoc. Int'l, Inc.\r                                                                         \n\nv. Altai,  Inc., </pre><span class=\"citation\" data-id=\"597418\"><a href=\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\"><span class=\"volume\">982</span>  <span class=\"reporter\">F.2d</span> <span class=\"page\">693</span> </a></span><pre class=\"inline\">(2d  Cir. 1992).7   The Second\r                           \n\nCircuit  designed its Altai test  to deal with  the fact that\r                                       \n\ncomputer programs,  copyrighted as  \"literary works,\"  can be\n\ninfringed by what is known as \"nonliteral\"  copying, which is\n\ncopying that  is  paraphrased or  loosely paraphrased  rather\n\nthan  word  for word.   See  </pre><span class=\"citation\" data-id=\"597418\"><a href=\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\"><span class=\"id_token\">id.</span>  at 701 </a></span><pre class=\"inline\"> (citing nonliteral-\r                                            \n\ncopying cases); see also 3 Melville B. Nimmer &amp; David Nimmer,\r                                    \n\nNimmer on  Copyright   13.03[A][1]  (1993).  When  faced with\r                                \n\nnonliteral-copying  cases,  courts  must   determine  whether\n\nsimilarities  are due merely to  the fact that  the two works\n\nshare  the  same  underlying  idea or  whether  they  instead\n\nindicate  that the  second author  copied the  first author's\n\nexpression.   The Second  Circuit designed its  Altai test to\r                                                                 \n\ndeal   with   this  situation   in   the  computer   context,\n\nspecifically  with  whether   one  computer  program   copied\n\nnonliteral expression from another program's code.\n\n                    \r                                \n\n7.  We consider the Altai test because both  parties and many\r                                     \nof the amici focus on it so heavily.  Borland, in particular,\r                        \nis highly  critical of the  district court for  not employing\nthe  Altai test.   Borland  does not,  however, indicate  how\r                      \nusing  that test  would  have been  dispositive in  Borland's\nfavor.  Interestingly, Borland  appears to contradict its own\nreasoning at  times by  criticizing the applicability  of the\nAltai test.\r                 \n\n                             -18-\r                                          18\r\r\n\n          The Altai test involves three  steps:  abstraction,\r                               \n\nfiltration,  and comparison.   The abstraction  step requires\n\ncourts to  \"dissect the allegedly  copied program's structure\n\nand isolate  each level of abstraction  contained within it.\"\n\n</pre><span class=\"citation\" data-id=\"597418\"><span class=\"antecedent_guess\">Altai,</span> <a href=\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\"><span class=\"volume\">982</span> <span class=\"reporter\">F.2d</span> at <span class=\"page\">707</span></a></span><pre class=\"inline\">.  This step enables courts to identify\r                 \n\nthe   appropriate   framework   within  which   to   separate\n\nprotectable  expression  from  unprotected  ideas.    Second,\n\ncourts apply a \"filtration\" step  in which they examine  \"the\n\nstructural  components  at  each  level  of   abstraction  to\n\ndetermine whether  their particular inclusion  at that  level\n\nwas `idea'  or was dictated by  considerations of efficiency,\n\nso  as to be necessarily incidental to that idea; required by\n\nfactors  external to  the program itself;  or taken  from the\n\npublic domain.\"   </pre><span class=\"citation\" data-id=\"597418\"><a href=\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\"><span class=\"id_token\">Id.</span>  Finally, courts </a></span><pre class=\"inline\"> compare the protected\r                                 \n\nelements of the infringed work (i.e., those that survived the\n\nfiltration  screening) to the  corresponding elements  of the\n\nallegedly  infringing work  to  determine whether  there  was\n\nsufficient  copying  of   protected  material  to  constitute\n\ninfringement.  </pre><span class=\"citation\" data-id=\"597418\"><a href=\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\"><span class=\"id_token\">Id.</span> at 710.\r</a></span><pre class=\"inline\">                              \n\n          In the  instant appeal, we are  not confronted with\n\nalleged nonliteral copying of computer  code.  Rather, we are\n\nfaced with Borland's deliberate, literal copying of the Lotus\n\nmenu command hierarchy.  Thus,  we must determine not whether\n\nnonliteral  copying occurred  in  some amorphous  sense,  but\n\n                             -19-\r                                          19\r\r\n\nrather whether the literal copying of  the Lotus menu command\n\nhierarchy constitutes copyright infringement.\n\n          While the Altai test may provide a useful framework\r                                     \n\nfor  assessing  the alleged  nonliteral  copying of  computer\n\ncode, we find  it to be of  little help in  assessing whether\n\nthe literal  copying of a menu  command hierarchy constitutes\n\ncopyright infringement.   In  fact, we  think that the  Altai\r                                                                         \n\ntest in this context may  actually be misleading because,  in\n\ninstructing courts  to abstract the various  levels, it seems\n\nto  encourage  them  to  find  a  base  level  that  includes\n\ncopyrightable subject matter that, if literally copied, would\n\nmake the  copier liable  for copyright infringement.8   While\n\nthat  base (or  literal) level  would not  be  at issue  in a\n\nnonliteral-copying case  like Altai, it is  precisely what is\r                                               \n\nat  issue in  this appeal.   We  think that  abstracting menu\n\ncommand hierarchies  down to  their individual word  and menu\n\nlevels and then filtering idea from expression at that stage,\n\nas  both the  Altai  and the  district  court tests  require,\r                               \n\nobscures  the more  fundamental  question of  whether a  menu\n\ncommand hierarchy  can be  copyrighted at all.   The  initial\n\n                    \r                                \n\n8.  We  recognize that  Altai  never states  that every  work\r                                         \ncontains a copyrightable \"nugget\" of  protectable expression.\nNonetheless, the implication is that for literal copying, \"it\nis  not necessary  to determine  the level of  abstraction at\nwhich  similarity  ceases to  consist  of  an `expression  of\nideas,' because literal similarity  by definition is always a\nsimilarity as to  the expression  of ideas.\"   3 Melville  B.\nNimmer  &amp; David  Nimmer,  Nimmer on  Copyright    13.03[A](2)\r                                                          \n(1993).\n\n                             -20-\r                                          20\r\r\n\ninquiry should not be whether individual components of a menu\n\ncommand hierarchy are expressive, but rather whether the menu\n\ncommand hierarchy as  a whole  can be copyrighted.   But  see\r                                                                         \n\nGates  Rubber Co.  v. Bando  Chem. Indus.,  Ltd., </pre><span class=\"citation\" data-id=\"657247\"><a href=\"/opinion/657247/the-gates-rubber-co-v-bando-chemical-industries-ltd/\"><span class=\"volume\">9</span>  <span class=\"reporter\">F.3d</span> <span class=\"page\">823</span>\r</a></span><pre class=\"inline\">                                                            \n\n(10th Cir. 1993)  (endorsing Altai's  abstraction-filtration-\r                                              \n\ncomparison test  as a way  of determining whether  \"menus and\n\nsorting criteria\" are copyrightable).\n\nD.    The  Lotus  Menu  Command  Hierarchy:    A  \"Method  of\r                                                                         \n\nOperation\"\r                      \n\n          Borland   argues  that   the  Lotus   menu  command\n\nhierarchy is  uncopyrightable because it is  a system, method\n\nof operation, process, or procedure foreclosed from copyright\n\nprotection  by 17  U.S.C.   102(b).   Section  102(b) states:\n\n\"In no case does copyright protection for an original work of\n\nauthorship extend to  any idea,  procedure, process,  system,\n\nmethod   of  operation,  concept,  principle,  or  discovery,\n\nregardless of the form in  which it is described,  explained,\n\nillustrated, or  embodied in such work.\"  Because we conclude\n\nthat  the  Lotus  menu  command  hierarchy  is  a  method  of\n\noperation,  we do  not consider  whether it  could also  be a\n\nsystem, process, or procedure.  \n\n          We think  that \"method of operation,\"  as that term\n\nis used  in   102(b), refers  to the means by  which a person\n\noperates something, whether it be a car, a food processor, or\n\na  computer.  Thus a text describing how to operate something\n\n                             -21-\r                                          21\r\r\n\nwould  not  extend  copyright  protection to  the  method  of\n\noperation itself; other  people would be free to  employ that\n\nmethod and to describe it in  their own words.  Similarly, if\n\na new  method of  operation  is used  rather than  described,\n\nother people would still  be free to employ or  describe that\n\nmethod.\n\n          We hold that the Lotus menu command hierarchy is an\n\nuncopyrightable  \"method  of  operation.\"    The  Lotus  menu\n\ncommand hierarchy  provides the means by  which users control\n\nand operate Lotus 1-2-3.  If users wish to copy material, for\n\nexample, they use the \"Copy\" command.  If users wish to print\n\nmaterial, they use the  \"Print\" command.  Users must  use the\n\ncommand terms to tell the  computer what to do.   Without the\n\nmenu command hierarchy, users would not be able to access and\n\ncontrol,  or indeed  make  use of,  Lotus 1-2-3's  functional\n\ncapabilities.\n\n          The Lotus  menu command hierarchy  does not  merely\n\nexplain  and present Lotus 1-2-3's functional capabilities to\n\nthe  user; it also serves as the  method by which the program\n\nis operated and controlled.  The Lotus menu command hierarchy\n\nis  different  from the  Lotus  long  prompts, for  the  long\n\nprompts are not  necessary to the  operation of the  program;\n\nusers  could operate Lotus 1-2-3  even if there  were no long\n\n                             -22-\r                                          22\r\r\n\nprompts.9     The  Lotus  menu  command   hierarchy  is  also\n\ndifferent  from the Lotus screen displays, for users need not\n\n\"use\" any expressive aspects of  the screen displays in order\n\nto  operate Lotus 1-2-3; because the way the screens look has\n\nlittle bearing on  how users control the  program, the screen\n\ndisplays   are  not   part  of   Lotus  1-2-3's   \"method  of\n\noperation.\"10    The Lotus  menu  command  hierarchy is  also\n\ndifferent from the  underlying computer  code, because  while\n\ncode  is  necessary  for the  program  to  work,  its precise\n\nformulation  is not.    In other  words,  to offer  the  same\n\ncapabilities as  Lotus 1-2-3,  Borland did not  have to  copy\n\nLotus's underlying  code (and  indeed it  did not);  to allow\n\nusers to operate its programs in substantially the same  way,\n\nhowever,  Borland   had  to  copy  the   Lotus  menu  command\n\nhierarchy.     Thus   the   Lotus  1-2-3   code   is  not   a\n\nuncopyrightable \"method of operation.\"11\n\n                    \r                                \n\n9.  As the Lotus long prompts are not before us on appeal, we\ntake no  position on  their copyrightability, although  we do\nnote  that a  strong argument  could be  made that  the brief\nexplanations they provide \"merge\" with the underlying idea of\nexplaining such functions.  See Morrissey v. Procter &amp; Gamble\r                                                                         \nCo.,  </pre><span class=\"citation\" data-id=\"276448\"><a href=\"/opinion/276448/frank-morrissey-v-the-procter-gamble-company/\"><span class=\"volume\">379</span> <span class=\"reporter\">F.2d</span> <span class=\"page\">675</span></a></span><pre class=\"inline\">, 678-79 (1st Cir. 1967) (when the possible\r               \nways  to express an idea are limited, the expression \"merges\"\nwith the  idea and is therefore  uncopyrightable; when merger\noccurs, identical copying is permitted).\n\n10.  As they are not before us on appeal, we take no position\non  whether  the  Lotus  1-2-3   screen  displays  constitute\noriginal expression capable of being copyrighted.\n\n11.  Because the Lotus 1-2-3 code is not before us on appeal,\nwe take no position on whether it is copyrightable.  We note,\nhowever, that original computer codes generally are protected\n\n                             -23-\r                                          23\r\r\n\n          The district court held that the Lotus menu command\n\nhierarchy,  with  its  specific  choice  and  arrangement  of\n\ncommand terms,  constituted an \"expression\" of  the \"idea\" of\n\noperating   a   computer  program   with   commands  arranged\n\nhierarchically into menus  and submenus.  Borland  II, 799 F.\r                                                                 \n\nSupp. at 216.  Under the district court's  reasoning, Lotus's\n\ndecision to  employ hierarchically arranged command  terms to\n\noperate its program could  not foreclose its competitors from\n\nalso  employing  hierarchically  arranged  command  terms  to\n\noperate  their  programs,  but  it did  foreclose  them  from\n\nemploying the  specific command  terms  and arrangement  that\n\nLotus  had used.  In effect, the district court limited Lotus\n\n1-2-3's \"method of operation\" to an abstraction.\n\n          Accepting the  district  court's finding  that  the\n\nLotus developers made some expressive choices in choosing and\n\narranging the  Lotus command terms, we  nonetheless hold that\n\nthat  expression is not  copyrightable because it  is part of\n\nLotus  1-2-3's \"method of operation.\"   We do  not think that\n\n\"methods of operation\" are  limited to abstractions;  rather,\n\nthey  are the means  by which a user  operates something.  If\n\nspecific  words are  essential to  operating something,  then\n\nthey are  part of a \"method  of operation\" and, as  such, are\n\n                    \r                                \n\nby copyright.  See, e.g., </pre><span class=\"citation\" data-id=\"597418\"><span class=\"antecedent_guess\">Altai,</span> <a href=\"/opinion/597418/computer-associates-international-inc-plaintiff-appellant-cross-appellee/\"><span class=\"volume\">982</span> <span class=\"reporter\">F.2d</span> at <span class=\"page\">702</span> </a></span><pre class=\"inline\"> (\"It is now\r                                           \nwell settled that the  literal elements of computer programs,\ni.e., their  source  and object  codes,  are the  subject  of\ncopyright protection.\") (citing cases).\n\n                             -24-\r                                          24\r\r\n\nunprotectable.  This is so whether  they must be highlighted,\n\ntyped  in, or even spoken, as computer programs no doubt will\n\nsoon be controlled by spoken words.\n\n          The  fact that Lotus developers could have designed\n\nthe Lotus menu command hierarchy differently is immaterial to\n\nthe question of  whether it is a  \"method of operation.\"   In\n\nother words,  our initial  inquiry is  not whether the  Lotus\n\nmenu   command   hierarchy  incorporates   any  expression.12\n\nRather, our initial inquiry is whether the Lotus menu command\n\nhierarchy  is a \"method of operation.\"  Concluding, as we do,\n\nthat  users  operate Lotus  1-2-3  by  using  the Lotus  menu\n\ncommand  hierarchy, and  that the  entire Lotus  menu command\n\nhierarchy is essential  to operating Lotus  1-2-3, we do  not\n\ninquire further  whether that method of  operation could have\n\nbeen designed differently.   The \"expressive\" choices of what\n\nto  name the  command terms  and how  to arrange them  do not\n\nmagically  change the uncopyrightable  menu command hierarchy\n\ninto copyrightable subject matter.\n\n          Our  holding that  \"methods of  operation\"  are not\n\nlimited to mere abstractions is bolstered by Baker v. Selden.\r                                                                        \n\nIn Baker, the Supreme Court explained that \r                    \n\n          the  teachings of  science and  the rules\n          and  methods  of  useful art  have  their\n          final end  in  application and  use;  and\n          this  application  and use  are  what the\n\n                    \r                                \n\n12.  We  think that  the  Altai test  would contemplate  this\r                                           \nbeing the initial inquiry.\n\n                             -25-\r                                          25\r\r\n\n          public derive from  the publication of  a\n          book  which  teaches  them.  .  .  .  The\n          description of the art in a  book, though\n          entitled  to  the  benefit of  copyright,\n          lays no foundation for an exclusive claim\n          to the art itself.  The object of the one\n          is explanation; the  object of the  other\n          is  use.   The former  may be  secured by\n          copyright.    The  latter  can   only  be\n          secured, if it can  be secured at all, by\n          letters-patent.\n\nBaker v. </pre><span class=\"citation no-link\"><span class=\"antecedent_guess\">Selden,</span> <span class=\"volume\">101</span>  <span class=\"reporter\">U.S.</span> at <span class=\"page\">104-05</span></span><pre class=\"inline\">.   Lotus wrote its  menu\r                           \n\ncommand hierarchy so that  people could learn it and  use it.\n\nAccordingly, it  falls  squarely within  the  prohibition  on\n\ncopyright  protection  established  in  Baker  v.  Selden and\r                                                                     \n\ncodified by Congress in   102(b).\n\n          In many  ways, the Lotus menu  command hierarchy is\n\nlike  the  buttons used  to  control, say,  a  video cassette\n\nrecorder (\"VCR\").   A VCR  is a  machine that enables  one to\n\nwatch and record video tapes.  Users operate VCRs by pressing\n\na  series of  buttons  that are  typically labelled  \"Record,\n\nPlay, Reverse,  Fast Forward,  Pause, Stop/Eject.\"   That the\n\nbuttons  are arranged  and  labeled  does  not  make  them  a\n\n\"literary work,\" nor does it make them an \"expression\" of the\n\nabstract \"method of  operating\" a  VCR via a  set of  labeled\n\nbuttons.  Instead, the buttons  are themselves the \"method of\n\noperating\" the VCR.\n\n          When a  Lotus 1-2-3 user chooses  a command, either\n\nby  highlighting  it on  the screen  or  by typing  its first\n\nletter, he or  she effectively pushes a button.  Highlighting\n\n                             -26-\r                                          26\r\r\n\nthe  \"Print\" command on the screen, or typing the letter \"P,\"\n\nis analogous to pressing a VCR button labeled \"Play.\"\n\n          Just as one could not  operate a buttonless VCR, it\n\nwould be impossible to  operate Lotus 1-2-3 without employing\n\nits menu command hierarchy.  Thus the Lotus command terms are\n\nnot  equivalent to the labels  on the VCR's  buttons, but are\n\ninstead  equivalent to  the buttons  themselves.   Unlike the\n\nlabels  on a VCR's buttons, which merely make operating a VCR\n\neasier by  indicating the buttons' functions,  the Lotus menu\n\ncommands are essential to operating Lotus 1-2-3.  Without the\n\nmenu  commands, there  would be  no way  to \"push\"  the Lotus\n\nbuttons,  as one  could push  unlabeled VCR  buttons.   While\n\nLotus could probably have designed a user interface for which\n\nthe command  terms were mere labels,  it did not do  so here.\n\nLotus 1-2-3 depends for  its operation on use of  the precise\n\ncommand terms that make up the Lotus menu command hierarchy.\n\n          One might  argue that  the buttons for  operating a\n\nVCR  are not  analogous  to  the  commands  for  operating  a\n\ncomputer program  because VCRs are not copyrightable, whereas\n\ncomputer programs are.   VCRs may not be  copyrighted because\n\nthey  do not  fit within  any of the    102(a)  categories of\n\ncopyrightable  works;  the closest  they come  is \"sculptural\n\nwork.\"  Sculptural works, however,  are subject to a \"useful-\n\narticle\" exception whereby \"the design of a useful  article .\n\n.  . shall be considered  a pictorial, graphic, or sculptural\n\n                             -27-\r                                          27\r\r\n\nwork  only if,  and  only to  the  extent that,  such  design\n\nincorporates pictorial, graphic, or sculptural  features that\n\ncan  be  identified  separately  from,  and  are  capable  of\n\nexisting independently  of, the  utilitarian  aspects of  the\n\narticle.\"   17  U.S.C.    101.   A  \"useful  article\" is  \"an\n\narticle having an intrinsic  utilitarian function that is not\n\nmerely  to portray the appearance of the article or to convey\n\ninformation.\"  </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span>   Whatever expression </span><pre class=\"inline\">there may be  in the\r                              \n\narrangement of the parts of a VCR is  not capable of existing\n\nseparately  from the VCR itself, so an ordinary VCR would not\n\nbe copyrightable.\n\n          Computer programs, unlike  VCRs, are  copyrightable\n\nas \"literary works.\"   17 U.S.C.   102(a).   Accordingly, one\n\nmight argue, the \"buttons\" used to operate a computer program\n\nare not like the buttons used  to operate a VCR, for they are\n\nnot subject to  a useful-article exception.  The response, of\n\ncourse, is that the arrangement of buttons on a VCR would not\n\nbe  copyrightable even  without  a useful-article  exception,\n\nbecause  the   buttons  are  an  uncopyrightable  \"method  of\n\noperation.\"   Similarly, the \"buttons\" of  a computer program\n\nare also an uncopyrightable \"method of operation.\"\n\n          That the Lotus menu  command hierarchy is a \"method\n\nof operation\"  becomes  clearer when  one  considers  program\n\ncompatibility.  Under Lotus's theory, if a user  uses several\n\ndifferent programs, he or  she must learn how to  perform the\n\n                             -28-\r                                          28\r\r\n\nsame operation in a different way for each program used.  For\n\nexample, if the  user wanted the computer to  print material,\n\nthen the  user would  have to  learn not  just one  method of\n\noperating  the  computer  such   that  it  prints,  but  many\n\ndifferent methods.  We find this absurd.  The fact that there\n\nmay  be many different ways to operate a computer program, or\n\neven many different  ways to operate a computer program using\n\na set of hierarchically arranged command terms, does not make\n\nthe actual method of operation chosen copyrightable; it still\n\nfunctions  as a method for operating the computer and as such\n\nis uncopyrightable.\n\n          Consider  also  that  users employ  the  Lotus menu\n\ncommand  hierarchy in  writing  macros.   Under the  district\n\ncourt's holding, if  the user  wrote a macro  to shorten  the\n\ntime needed  to perform a  certain operation in  Lotus 1-2-3,\n\nthe user  would be  unable to use  that macro to  shorten the\n\ntime  needed  to  perform  that  same  operation  in  another\n\nprogram.  Rather,  the user would have to  rewrite his or her\n\nmacro  using  that  other program's  menu  command hierarchy.\n\nThis is despite the fact that the macro is clearly the user's\n\nown  work product.  We  think that forcing  the user to cause\n\nthe computer to perform the same operation in a different way\n\nignores  Congress's direction  in    102(b) that  \"methods of\n\noperation\" are  not copyrightable.   That programs  can offer\n\nusers the ability to write macros in many different ways does\n\n                             -29-\r                                          29\r\r\n\nnot  change the fact that, once written, the macro allows the\n\nuser to  perform an  operation automatically.   As the  Lotus\n\nmenu command  hierarchy serves as  the basis for  Lotus 1-2-3\n\nmacros, the  Lotus menu  command  hierarchy is  a \"method  of\n\noperation.\"  \n\n          In  holding  that  expression  that is  part  of  a\n\n\"method  of  operation\"  cannot  be copyrighted,  we  do  not\n\nunderstand  ourselves  to  go  against  the  Supreme  Court's\n\nholding in Feist.  In Feist, the Court explained:\r                                       \n\n          The primary objective of copyright is not\n          to reward  the labor  of authors,  but to\n          promote  the  Progress  of   Science  and\n          useful  Arts.   To  this  end,  copyright\n          assures  authors  the   right  to   their\n          original   expression,   but   encourages\n          others to build freely upon the ideas and\n          information conveyed by a work.\n\n</pre><span class=\"citation\" data-id=\"112568\"><span class=\"antecedent_guess\">Feist,</span> <a href=\"/opinion/112568/feist-publications-inc-v-rural-telephone-service-co/\"><span class=\"volume\">499</span> <span class=\"reporter\">U.S.</span> at <span class=\"page\">349-50</span> </a></span><pre class=\"inline\">(quotations and citations omitted).\r                 \n\nWe  do not think  that the Court's  statement that \"copyright\n\nassures  authors  the  right to  their  original  expression\"\n\nindicates that all  expression is necessarily  copyrightable;\n\nwhile   original  expression   is  necessary   for  copyright\n\nprotection,  we do  not  think that  it is  alone sufficient.\n\nCourts must  still inquire whether  original expression falls\n\nwithin  one  of  the  categories  foreclosed  from  copyright\n\nprotection  by     102(b),   such  as  being  a  \"method   of\n\noperation.\"\n\n          We also  note that  in most contexts,  there is  no\n\nneed to \"build\" upon other people's expression, for the ideas\n\n                             -30-\r                                          30\r\r\n\nconveyed by that expression  can be conveyed by  someone else\n\nwithout  copying the  first  author's expression.13   In  the\n\ncontext of methods of operation, however, \"building\" requires\n\nthe use of the precise method of operation already  employed;\n\notherwise,   \"building\"   would  require   dismantling,  too.\n\nOriginal developers are not the only people entitled to build\n\non the methods of  operation they create; anyone can.   Thus,\n\nBorland may  build  on the  method  of operation  that  Lotus\n\ndesigned and  may use  the Lotus  menu  command hierarchy  in\n\ndoing so.\n\n          Our holding  that  methods  of  operation  are  not\n\nlimited to  abstractions goes against </pre><span class=\"citation\" data-id=\"608143\"><span class=\"antecedent_guess\">Autoskill,</span>  <a href=\"/opinion/608143/autoskill-inc-a-canadian-corporation-v-national-educational-support/\"><span class=\"volume\">994</span> <span class=\"reporter\">F.2d</span> at\r                                                           \n\n<span class=\"page\">1495</span> </a></span><pre class=\"inline\"> n.23,   in  which   the  Tenth  Circuit   rejected  the\n\ndefendant's  argument that  the  keying procedure  used in  a\n\ncomputer  program  was   an  uncopyrightable  \"procedure\"  or\n\n\"method  of operation\" under   102(b).  The program at issue,\n\nwhich  was designed to  test and train  students with reading\n\ndeficiencies,  </pre><span class=\"citation\" data-id=\"608143\"><a href=\"/opinion/608143/autoskill-inc-a-canadian-corporation-v-national-educational-support/\"><span class=\"id_token\">id.</span>  at  1481, </a></span><pre class=\"inline\"> required  students  to  select\r                              \n\nresponses  to the program's queries \"by pressing the 1, 2, or\n\n3  keys.\"  </pre><span class=\"citation\" data-id=\"608143\"><a href=\"/opinion/608143/autoskill-inc-a-canadian-corporation-v-national-educational-support/\"><span class=\"id_token\">Id.</span>  at 1495 </a></span><pre class=\"inline\">n.23.   The Tenth  Circuit held that,\r                          \n\n\"for purposes of the preliminary injunction, . . . the record\n\nshowed  that [this]  keying  procedure reflected  at least  a\n\nminimal  degree  of creativity,\"  as  required  by Feist  for\r                                                                    \n\n                    \r                                \n\n13.  When  there are a limited  number of ways  to express an\nidea,  however, the  expression  \"merges\" with  the idea  and\nbecomes uncopyrightable.  </pre><span class=\"citation\" data-id=\"276448\"><span class=\"antecedent_guess\">Morrissey,</span> <a href=\"/opinion/276448/frank-morrissey-v-the-procter-gamble-company/\"><span class=\"volume\">379</span> <span class=\"reporter\">F.2d</span> at <span class=\"page\">678-79</span></a></span><pre class=\"inline\">.\r                                               \n\n                             -31-\r                                          31\r\r\n\ncopyright protection.  </pre><span class=\"citation\" data-id=\"276448\"><a href=\"/opinion/276448/frank-morrissey-v-the-procter-gamble-company/\"><span class=\"id_token\">Id.</span>  As an </a></span><pre class=\"inline\">initial matter, we question\r                                      \n\nwhether  a  programmer's  decision  to have  users  select  a\n\nresponse by pressing  the 1, 2, or 3 keys  is original.  More\n\nimportantly,  however,   we  fail  to  see   how  \"a  student\n\nselect[ing] a response by pressing the 1, 2, or 3 keys,\" </pre><span class=\"citation\" data-id=\"276448\"><a href=\"/opinion/276448/frank-morrissey-v-the-procter-gamble-company/\"><span class=\"id_token\">id.,</span>\r                                                                        \n\ncan be </a></span><pre class=\"inline\">anything but an unprotectable method of operation.14\n\n                             III.\r                                         III.\r                                             \n\n                          Conclusion\r                                      Conclusion\r                                                \n\n          Because  we  hold  that  the  Lotus   menu  command\n\nhierarchy is uncopyrightable subject matter, we further  hold\n\nthat Borland  did not  infringe Lotus's copyright  by copying\n\nit.   Accordingly,  we  need not  consider  any of  Borland's\n\naffirmative defenses.  The judgment of the district court is\n\n          Reversed.\r                               \n\n                                           Concurrence\r                                                                  \n\nfollows.  \r                    \n\n                    \r                                \n\n14.  The  Ninth  Circuit has  also  indicated  in dicta  that\n\"menus,  and keystrokes\"  may  be copyrightable.   Brown  Bag\r                                                                         \nSoftware v. Symantec  Corp., </pre><span class=\"citation\" data-id=\"580902\"><a href=\"/opinion/580902/brown-bag-software-a-california-corporation-formerly-telemarketing/\"><span class=\"volume\">960</span> <span class=\"reporter\">F.2d</span> <span class=\"page\">1465</span></a></span><pre class=\"inline\">,  1477 (9th Cir.),\r                                       \ncert. denied,  BB Asset  Management, Inc. v.  Symantec Corp.,\r                                                                        \n</pre><span class=\"citation no-link\"><span class=\"volume\">113</span> <span class=\"reporter\">S. Ct.</span> <span class=\"page\">198</span> </span><pre class=\"inline\">(1992).  In that case, however,  the plaintiff\ndid  not show that  the defendant had  copied the plaintiff's\nmenus or keystrokes, so the court was not directly faced with\nwhether  the menus or keystrokes constituted an unprotectable\nmethod of operation.  </pre><span class=\"citation no-link\"><span class=\"id_token\">Id.</span>\r                                     \n\n                             -32-\r                                          32\r</span><pre class=\"inline\">\r\n\n     BOUDIN, Circuit Judge,  concurring.   The importance  of\r                                      \n\nthis  case, and a slightly  different emphasis in  my view of\n\nthe underlying problem,  prompt me to add a few  words to the\n\nmajority's tightly focused discussion.\n\n                              I.\n\n     Most of the law of copyright and the \"tools\" of analysis\n\nhave  developed  in the  context  of literary  works  such as\n\nnovels, plays,  and  films.   In this  milieu, the  principal\n\nproblem--simply  stated,  if   difficult  to  resolve--is  to\n\nstimulate  creative expression without unduly limiting access\n\nby  others to the broader themes and concepts deployed by the\n\nauthor.  The middle of the spectrum presents close cases; but\n\na \"mistake\" in providing too much protection involves a small\n\ncost:  subsequent authors treating  the same themes must take\n\na few more steps away from the original expression.\n\n     The   problem  presented   by   computer   programs   is\n\nfundamentally different in one respect.  The computer program\n\nis  a means  for  causing  something  to  happen;  it  has  a\r                       \n\nmechanical  utility, an  instrumental role,  in accomplishing\n\nthe world's work.   Granting protection, in other  words, can\n\nhave  some  of  the  consequences  of  patent  protection  in\r                                                         \n\nlimiting other people's ability to perform a task in the most\n\nefficient  manner.      Utility  does   not   bar   copyright\n\n                             -31-\r                                         -31-\r\r\n\n(dictionaries  may  be   copyrighted),  but  it  alters   the\n\ncalculus.\n\n     Of course, the argument for protection is  undiminished,\r                                            \n\nperhaps  even enhanced,  by utility:  if we  want more  of an\n\nintellectual product,  a temporary  monopoly for the  creator\n\nprovides  incentives for  others to  create other,  different\n\nitems in this class.  But the \"cost\" side of the equation may\n\nbe different where  one places  a very high  value on  public\n\naccess  to a useful innovation that may be the most efficient\n\nmeans of performing  a given  task.  Thus,  the argument  for\n\nextending protection may be  the same; but the stakes  on the\n\nother side are much higher. \n\n     It   is  no   accident   that   patent  protection   has\n\npreconditions  that  copyright protection  does not--notably,\n\nthe  requirements of  novelty  and non-obviousness--and  that\n\npatents  are granted  for a  shorter period  than copyrights.\n\nThis problem  of utility  has sometimes manifested  itself in\n\ncopyright cases, such as Baker v. Selden, </pre><span class=\"citation no-link\"><span class=\"volume\">101</span> <span class=\"reporter\">U.S.</span> <span class=\"page\">99</span> </span><pre class=\"inline\">(1879),\r                                                    \n\nand been  dealt with through various  formulations that limit\n\ncopyright or create limited rights to copy.  But the case law\n\nand  doctrine addressed  to  utility in  copyright have  been\n\nbrief detours in the general march of copyright law.  \n\n     Requests  for the protection  of computer  menus present\n\nthe  concern with  fencing off  access to  the commons  in an\n\nacute form.  A new menu may be a creative work, but over time\n\n                             -32-\r                                         -32-\r\r\n\nits importance may come to reside more in the investment that\n\nhas been made by users  in learning the menu and  in building\r                                  \n\ntheir own  mini-programs--macros--in reliance upon  the menu.\n\nBetter   typewriter  keyboard  layouts  may  exist,  but  the\n\nfamiliar QWERTY keyboard dominates the market because that is\n\nwhat everyone has learned to use.  See P. David, CLIO and the\r                                                                         \n\nEconomics  of  QWERTY, 75  Am. Econ.  Rev.  332 (1985).   The\r                                                      \n\nQWERTY keyboard is nothing other than a menu of letters.\n\n     Thus, to assume that computer programs are just one more\n\nnew means of  expression, like  a filmed play,  may be  quite\n\nwrong.   The  \"form\"--the written  source  code or  the  menu\n\nstructure depicted  on the  screen--look hauntingly like  the\n\nfamiliar stuff of copyright; but the \"substance\" probably has\n\nmore  to  do with  problems presented  in  patent law  or, as\n\nalready noted,  in those rare  cases where copyright  law has\n\nconfronted   industrially   useful  expressions.     Applying\n\ncopyright  law  to computer  programs  is  like assembling  a\n\njigsaw puzzle whose pieces do not quite fit.\n\n     All of this  would make  no difference  if Congress  had\n\nsquarely confronted the issue,  and given explicit directions\n\nas to  what should be done.  The Copyright Act of 1976 took a\n\ndifferent course.  While Congress said that computer programs\n\nmight be  subject to  copyright protection,  it said  this in\n\nvery  general terms;  and, especially  in    102(b), Congress\n\nadopted a string  of exclusions that if taken literally might\n\n                             -33-\r                                         -33-\r\r\n\neasily   seem   to  exclude   most  computer   programs  from\n\nprotection.   The only  detailed prescriptions  for computers\n\ninvolve narrow  issues (like back-up copies)  of no relevance\n\nhere.\n\n     Of  course,  one  could  still read  the  statute  as  a\n\ncongressional   command  that   the  familiar   doctrines  of\n\ncopyright  law be taken and  applied to computer programs, in\n\ncookie cutter fashion, as if the programs were novels or play\n\nscripts.    Some of  the  cases  involving computer  programs\n\nembody  this  approach.  It  seems  to  me  mistaken  on  two\n\ndifferent grounds:  the tradition  of copyright law,  and the\n\nlikely intent of Congress.\n\n     The  broad-brush conception of copyright protection, the\n\ntime limits, and the formalities have long been prescribed by\n\nstatute.   But the heart  of copyright doctrine--what  may be\n\nprotected and with what limitations and  exceptions--has been\n\ndeveloped by  the courts through  experience with  individual\n\ncases.   B. Kaplan, An Unhurried View of Copyright 40 (1967).\r                                                              \n\nOccasionally Congress addresses a problem in detail.  For the\n\nmost part  the interstitial development of  copyright through\n\nthe courts is our tradition.\n\n     Nothing in  the language  or legislative history  of the\n\n1976  Act, or  at  least nothing  brought  to our  attention,\n\nsuggests that Congress meant the courts to abandon this case-\n\nby-case  approach.   Indeed,  by setting  up    102(b)  as  a\n\n                             -34-\r                                         -34-\r\r\n\ncounterpoint  theme, Congress  has  arguably  recognized  the\n\ntension and left  it for  the courts to  resolve through  the\n\ndevelopment  of  case  law.   And  case  law  development  is\n\nadaptive:   it allows new problems to  be solved with help of\r                    \n\nearlier doctrine, but  it does not preclude  new doctrines to\n\nmeet new situations.\n\n                             II.\n\n     In this case, the raw facts are mostly, if not entirely,\n\nundisputed.   Although the inferences to be drawn may be more\n\ndebatable,  it is very hard to see that Borland has shown any\n\ninterest in the Lotus  menu except as a fall-back  option for\n\nthose users already committed to it by prior experience or in\n\norder to run their own macros using 1-2-3 commands.  At least\n\nfor  the amateur,  accessing the  Lotus menu  in the  Borland\n\nQuattro or Quattro Pro program takes some effort.\n\n     Put differently, it is unlikely that users who value the\n\nLotus menu  for its  own sake--independent of  any investment\n\nthey  have made  themselves  in learning  Lotus' commands  or\n\ncreating macros dependent upon them--would choose the Borland\n\nprogram  in  order  to  secure  access  to  the  Lotus  menu.\n\nBorland's success  is due primarily  to other features.   Its\n\nrationale for  deploying the  Lotus  menu bears  the ring  of\n\ntruth.\n\n     Now,  any  use  of  the  Lotus  menu  by  Borland  is  a\n\ncommercial  use  and deprives  Lotus  of  a  portion  of  its\n\n                             -35-\r                                         -35-\r\r\n\n\"reward,\" in the sense that an  infringement claim if allowed\n\nwould  increase  Lotus'  profits.     But  this  is  circular\n\nreasoning: broadly speaking, every limitation on copyright or\n\nprivileged use diminishes the reward of the original creator.\n\n Yet  not every  writing  is copyrightable  or  every use  an\n\ninfringement.   The  provision  of reward  is one  concern of\n\ncopyright  law, but  it is  not the  only one.   If  it were,\n\ncopyrights  would   be  perpetual  and  there   would  be  no\n\nexceptions.\n\n     The present  case is  an unattractive one  for copyright\n\nprotection  of the menu.   The menu  commands (e.g., \"print,\"\r                                                               \n\n\"quit\") are  largely for  standard procedures that  Lotus did\n\nnot invent and are common words that Lotus cannot monopolize.\n\nWhat is  left is the particular  combination and sub-grouping\n\nof  commands in a pattern devised by Lotus.  This arrangement\n\nmay have  a more  appealing logic and  ease of use  than some\n\nother configurations; but there is a certain arbitrariness to\n\nmany of the choices.\n\n     If Lotus is  granted a monopoly  on this pattern,  users\n\nwho  have learned  the command  structure  of Lotus  1-2-3 or\n\ndevised their own  macros are  locked into Lotus,  just as  a\n\ntypist  who  has learned  the  QWERTY keyboard  would  be the\n\ncaptive of anyone  who had  a monopoly on  the production  of\n\nsuch  a keyboard.  Apparently,  for a period  Lotus 1-2-3 has\n\nhad such  sway in the market  that it has represented  the de\r                                                                         \n\n                             -36-\r                                         -36-\r\r\n\nfacto standard for electronic  spreadsheet commands.  So long\r                 \n\nas Lotus is the superior spreadsheet--either in quality or in\n\nprice--there may be nothing wrong with this advantage.\n\n     But if a better  spreadsheet comes along, it is  hard to\n\nsee why customers who have learned the Lotus menu and devised\n\nmacros for it should  remain captives of Lotus because  of an\n\ninvestment  in learning made by  the users and  not by Lotus.\n\nLotus  has  already reaped  a  substantial  reward for  being\n\nfirst; assuming  that the Borland program is now better, good\n\nreasons exist for freeing it to  attract old Lotus customers:\n\nto  enable the  old  customers to  take  advantage of  a  new\n\nadvance,  and to reward Borland  in turn for  making a better\n\nproduct.   If  Borland has  not made  a better  product, then\n\ncustomers will remain with Lotus anyway.\n\n     Thus, for me the question is not whether  Borland should\n\nprevail  but  on  what  basis.    Various  avenues  might  be\n\ntraveled, but the main choices  are between holding that  the\n\nmenu  is not  protectable  by copyright  and  devising a  new\n\ndoctrine that Borland's  use is privileged.   No solution  is\n\nperfect  and no  intermediate  appellate court  can make  the\n\nfinal choice.\n\n     To  call the  menu a  \"method of  operation\" is,  in the\n\ncommon use of those words, a defensible position.  After all,\n\nthe purpose  of the menu  is not to be  admired as a  work of\n\nliterary or pictorial art.  It is to transmit directions from\n\n                             -37-\r                                         -37-\r\r\n\nthe user to the computer, i.e., to operate the computer.  The\r                                                      \n\nmenu is also a \"method\" in the dictionary sense because it is\n\na \"planned way of doing something,\" an \"order or system,\" and\n\n(aptly  here) an \"orderly or systematic arrangement, sequence\n\nor the like.\"  Random  House Webster's College Dictionary 853\r                                                                     \n\n(1991).\n\n     A different approach  would be to say that Borland's use\n\nis privileged  because, in the context  already described, it\n\nis  not seeking  to appropriate  the advances made  by Lotus'\n\nmenu;  rather, having  provided  an arguably  more attractive\n\nmenu  of its  own, Borland  is merely  trying to  give former\n\nLotus users an  option to exploit their  own prior investment\n\nin learning  or in  macros.   The difference is  that such  a\n\nprivileged  use  approach  would  not  automatically  protect\n\nBorland  if  it  had  simply  copied  the  Lotus menu  (using\n\ndifferent codes), contributed nothing  of its own, and resold\n\nLotus under the Borland label.\n\n     The  closest analogue  in conventional copyright  is the\n\nfair use doctrine.   E.g., Harper &amp; Row, Publishers,  Inc. v.\r                                                                      \n\nNation Enters.,  </pre><span class=\"citation\" data-id=\"111432\"><a href=\"/opinion/111432/harper-row-publishers-inc-v-nation-enterprises/\"><span class=\"volume\">471</span> <span class=\"reporter\">U.S.</span>  <span class=\"page\">539</span> </a></span><pre class=\"inline\">(1985).   Although invoked  by\r                          \n\nBorland,  it has  largely  been brushed  aside  in this  case\n\nbecause the Supreme Court has said that it is \"presumptively\"\n\nunavailable where the use is a \"commercial\" one.   See </pre><span class=\"citation no-link\"><span class=\"id_token\">id.</span> at\r                                                                      \n\n562. </span><pre class=\"inline\">  But see Campbell v. Acuff-Rose Music, Inc., </pre><span class=\"citation\" data-id=\"112936\"><a href=\"/opinion/112936/campbell-v-acuff-rose-music-inc/\"><span class=\"volume\">114</span> <span class=\"reporter\">S. Ct.</span>\r                                                             \n\n<span class=\"page\">1164</span></a></span><pre class=\"inline\">, 1174 (1994).  In my view, this is something less than a\n\n                             -38-\r                                         -38-\r\r\n\ndefinitive  answer;  \"presumptively\" does  not  mean \"always\"\n\nand, in  any event, the doctrine  of fair use  was created by\n\nthe courts and can be adapted to new purposes.\n\n     But  a privileged  use doctrine would  certainly involve\n\nproblems of its own.  It might more closely tailor the limits\n\non  copyright protection  to  the reasons  for limiting  that\n\nprotection;  but it  would  entail a  host of  administrative\n\nproblems that  would  cause cost  and delay,  and would  also\n\nreduce  the  ability of  the  industry  to predict  outcomes.\n\nIndeed,  to  the  extent that  Lotus'  menu  is an  important\n\nstandard in the  industry, it  might be argued  that any  use\n\nought to be deemed privileged.\n\n     In  sum,  the majority's  result  persuades  me and  its\n\nformulation  is as good, if  not better, than  any other that\n\noccurs  to  me now  as  within the  reach  of  courts.   Some\n\nsolutions (e.g., a very short copyright period for menus) are\r                           \n\nnot options  at all for courts but might be for Congress.  In\n\nall  events, the  choices are  important ones of  policy, not\n\nlinguistics,  and they  should  be made  with the  underlying\n\nconsiderations in view.\n\n                             -39-\r                                         -39-\r\r\n</pre>",
  "extracted_by_ocr": false,
  "opinions_cited": [
    "https://www.courtlistener.com/api/rest/v3/opinions/111432/",
    "https://www.courtlistener.com/api/rest/v3/opinions/112568/",
    "https://www.courtlistener.com/api/rest/v3/opinions/112936/",
    "https://www.courtlistener.com/api/rest/v3/opinions/195601/",
    "https://www.courtlistener.com/api/rest/v3/opinions/276448/",
    "https://www.courtlistener.com/api/rest/v3/opinions/503998/",
    "https://www.courtlistener.com/api/rest/v3/opinions/534883/",
    "https://www.courtlistener.com/api/rest/v3/opinions/564319/",
    "https://www.courtlistener.com/api/rest/v3/opinions/580902/",
    "https://www.courtlistener.com/api/rest/v3/opinions/597418/",
    "https://www.courtlistener.com/api/rest/v3/opinions/608143/",
    "https://www.courtlistener.com/api/rest/v3/opinions/657247/",
    "https://www.courtlistener.com/api/rest/v3/opinions/672323/",
    "https://www.courtlistener.com/api/rest/v3/opinions/1379188/",
    "https://www.courtlistener.com/api/rest/v3/opinions/1599920/",
    "https://www.courtlistener.com/api/rest/v3/opinions/1801801/",
    "https://www.courtlistener.com/api/rest/v3/opinions/1802132/",
    "https://www.courtlistener.com/api/rest/v3/opinions/1952439/"
  ]
}